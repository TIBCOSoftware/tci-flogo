{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-redis.git/src/app/Redis/activity/rediscommand",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/string",
        "git.tibco.com/git/product/ipaas/wi-redis.git/src/app/Redis/connector/connection"
    ],
    "name": "Redis-Sets-App",
    "description": "",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "tags": [],
    "triggers": [
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9999,
                "APISpecUpdate": false,
                "swagger": "",
                "swaggerVersion": "v2",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "This flow execute various commands of Redis Group Sets",
                    "settings": {
                        "Method": "GET",
                        "reqType": "application/json",
                        "Path": "/redis",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Sets"
                        },
                        "output": {
                            "message": "=$.message"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "Sets"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:Sets",
            "data": {
                "name": "Sets",
                "description": "This flow execute various commands of Redis Group Sets",
                "links": [
                    {
                        "id": 1,
                        "from": "SADD",
                        "to": "SMEMBERS",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "SMEMBERS",
                        "to": "SISMEMBER",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "SISMEMBER",
                        "to": "SCARD",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "SCARD",
                        "to": "SREM",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "SREM",
                        "to": "SPOP",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "SPOP",
                        "to": "SMOVE",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "SMOVE",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "SMOVE",
                        "to": "LogMessage6",
                        "type": "label",
                        "label": "SMOVE to LogMessage6"
                    },
                    {
                        "id": 9,
                        "from": "SPOP",
                        "to": "LogMessage5",
                        "type": "label",
                        "label": "SPOP to LogMessage5"
                    },
                    {
                        "id": 10,
                        "from": "SREM",
                        "to": "LogMessage4",
                        "type": "label",
                        "label": "SREM to LogMessage4"
                    },
                    {
                        "id": 11,
                        "from": "SCARD",
                        "to": "LogMessage3",
                        "type": "label",
                        "label": "SCARD to LogMessage3"
                    },
                    {
                        "id": 12,
                        "from": "SISMEMBER",
                        "to": "LogMessage2",
                        "type": "label",
                        "label": "SISMEMBER to LogMessage2"
                    },
                    {
                        "id": 13,
                        "from": "SMEMBERS",
                        "to": "LogMessage1",
                        "type": "label",
                        "label": "SMEMBERS to LogMessage1"
                    },
                    {
                        "id": 14,
                        "from": "SADD",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "SADD to LogMessage"
                    }
                ],
                "tasks": [
                    {
                        "id": "SADD",
                        "name": "SADD",
                        "description": "Redis Query activity",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=array.create('Maths','English','Physics','Biology','Chemistry')",
                            "accumulate": true
                        },
                        "activity": {
                            "ref": "#rediscommand",
                            "input": {
                                "Connection": "conn://3717ff40-0bd2-11ec-9848-472c5e74e79e",
                                "Group": "Sets",
                                "Command": "SADD",
                                "input": {
                                    "mapping": {
                                        "key": "Subject",
                                        "members": [
                                            {
                                                "member": "=$iteration[value]"
                                            }
                                        ],
                                        "DatabaseIndex": 2
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"members\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"member\":{\"required\":true,\"type\":\"string\"}}}},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\",\"members\"]}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"members\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"member\":{\"required\":true,\"type\":\"string\"}}}},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\",\"members\"]}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SADDResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[5]}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SADDResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[5]}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SMEMBERS",
                        "name": "SMEMBERS",
                        "description": "Redis Query activity",
                        "activity": {
                            "ref": "#rediscommand",
                            "input": {
                                "Connection": "conn://3717ff40-0bd2-11ec-9848-472c5e74e79e",
                                "Group": "Sets",
                                "Command": "SMEMBERS",
                                "input": {
                                    "mapping": {
                                        "key": "Subject",
                                        "DatabaseIndex": 2
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\"]}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\"]}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SMEMBERSResponse\":{\"type\":\"object\",\"properties\":{\"members\":{\"$id\":\"#/properties/members\",\"type\":\"array\",\"items\":{\"$id\":\"#/properties/members/items\",\"type\":\"object\",\"properties\":{\"member\":{\"$id\":\"#/properties/members/items/properties/member\",\"type\":\"string\"}}}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SMEMBERSResponse\":{\"type\":\"object\",\"properties\":{\"members\":{\"$id\":\"#/properties/members\",\"type\":\"array\",\"items\":{\"$id\":\"#/properties/members/items\",\"type\":\"object\",\"properties\":{\"member\":{\"$id\":\"#/properties/members/items/properties/member\",\"type\":\"string\"}}}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SISMEMBER",
                        "name": "SISMEMBER",
                        "description": "Redis Query activity",
                        "activity": {
                            "ref": "#rediscommand",
                            "input": {
                                "Connection": "conn://3717ff40-0bd2-11ec-9848-472c5e74e79e",
                                "Group": "Sets",
                                "Command": "SISMEMBER",
                                "input": {
                                    "mapping": {
                                        "key": "Subject",
                                        "member": "Maths",
                                        "DatabaseIndex": 2
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"member\":{\"required\":true,\"type\":\"string\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\",\"member\"]}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"member\":{\"required\":true,\"type\":\"string\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\",\"member\"]}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SISMEMBERResponse\":{\"$id\":\"/properties/result\",\"type\":\"boolean\",\"title\":\"The Result Schema \",\"default\":false,\"examples\":[true]}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SISMEMBERResponse\":{\"$id\":\"/properties/result\",\"type\":\"boolean\",\"title\":\"The Result Schema \",\"default\":false,\"examples\":[true]}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SCARD",
                        "name": "SCARD",
                        "description": "Redis Query activity",
                        "activity": {
                            "ref": "#rediscommand",
                            "input": {
                                "Connection": "conn://3717ff40-0bd2-11ec-9848-472c5e74e79e",
                                "Group": "Sets",
                                "Command": "SCARD",
                                "input": {
                                    "mapping": {
                                        "key": "Subject",
                                        "DatabaseIndex": 2
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\"]}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\"]}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SCARDResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[0]}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SCARDResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[0]}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SREM",
                        "name": "SREM",
                        "description": "Redis Query activity",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=array.create('Biology','Chemistry')",
                            "accumulate": true
                        },
                        "activity": {
                            "ref": "#rediscommand",
                            "input": {
                                "Connection": "conn://3717ff40-0bd2-11ec-9848-472c5e74e79e",
                                "Group": "Sets",
                                "Command": "SREM",
                                "input": {
                                    "mapping": {
                                        "key": "Subject",
                                        "members": [
                                            {
                                                "member": "=$iteration[value]"
                                            }
                                        ],
                                        "DatabaseIndex": 2
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"members\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"member\":{\"required\":true,\"type\":\"string\"}}}},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\",\"members\"]}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"members\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"member\":{\"required\":true,\"type\":\"string\"}}}},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\",\"members\"]}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SREMResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[5]}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SREMResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[5]}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SPOP",
                        "name": "SPOP",
                        "description": "Redis Query activity",
                        "activity": {
                            "ref": "#rediscommand",
                            "input": {
                                "Connection": "conn://3717ff40-0bd2-11ec-9848-472c5e74e79e",
                                "Group": "Sets",
                                "Command": "SPOP",
                                "input": {
                                    "mapping": {
                                        "key": "Subject",
                                        "count": 1,
                                        "DatabaseIndex": 2
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"count\":{\"required\":false,\"type\":\"integer\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\"]}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"key\":{\"required\":true,\"type\":\"string\"},\"count\":{\"required\":false,\"type\":\"integer\"},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"key\"]}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SPOPResponse\":{\"type\":\"object\",\"properties\":{\"members\":{\"$id\":\"#/properties/members\",\"type\":\"array\",\"items\":{\"$id\":\"#/properties/members/items\",\"type\":\"object\",\"properties\":{\"member\":{\"$id\":\"#/properties/members/items/properties/member\",\"type\":\"string\"}}}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SPOPResponse\":{\"type\":\"object\",\"properties\":{\"members\":{\"$id\":\"#/properties/members\",\"type\":\"array\",\"items\":{\"$id\":\"#/properties/members/items\",\"type\":\"object\",\"properties\":{\"member\":{\"$id\":\"#/properties/members/items/properties/member\",\"type\":\"string\"}}}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SMOVE",
                        "name": "SMOVE",
                        "description": "Redis Query activity",
                        "activity": {
                            "ref": "#rediscommand",
                            "input": {
                                "Connection": "conn://3717ff40-0bd2-11ec-9848-472c5e74e79e",
                                "Group": "Sets",
                                "Command": "SMOVE",
                                "input": {
                                    "mapping": {
                                        "source": "Subject",
                                        "destination": "Subject1",
                                        "member": "English",
                                        "DatabaseIndex": 2
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"source\":{\"type\":\"string\",\"required\":true},\"destination\":{\"type\":\"string\",\"required\":true},\"member\":{\"type\":\"string\",\"required\":true},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"source\",\"destination\",\"member\"]}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"source\":{\"type\":\"string\",\"required\":true},\"destination\":{\"type\":\"string\",\"required\":true},\"member\":{\"type\":\"string\",\"required\":true},\"DatabaseIndex\":{\"required\":false,\"type\":\"integer\"}},\"required\":[\"source\",\"destination\",\"member\"]}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SMOVEResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[5]}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"SMOVEResponse\":{\"$id\":\"/properties/result\",\"type\":\"integer\",\"title\":\"The Result Schema \",\"default\":0,\"examples\":[5]}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "message": "Redis SETS Commands executed successfully"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage6",
                        "name": "LogMessage6",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[SMOVE].Output)"
                            }
                        }
                    },
                    {
                        "id": "LogMessage5",
                        "name": "LogMessage5",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[SPOP].Output)"
                            }
                        }
                    },
                    {
                        "id": "LogMessage4",
                        "name": "LogMessage4",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[SREM])"
                            }
                        }
                    },
                    {
                        "id": "LogMessage3",
                        "name": "LogMessage3",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[SCARD].Output)"
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[SISMEMBER].Output)"
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[SMEMBERS].Output)"
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[SADD])"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [
        {
            "name": "Redis.Redis-Conn-New.Host_Name",
            "type": "string",
            "value": "ec2-13-57-48-134.us-west-1.compute.amazonaws.com"
        },
        {
            "name": "Redis.Redis-Conn-New.Port",
            "type": "float64",
            "value": 6380
        },
        {
            "name": "Redis.Redis-Conn-New.Default_Database_Index",
            "type": "float64",
            "value": 0
        },
        {
            "name": "Redis.Redis-Conn-New.Password",
            "type": "string",
            "value": ""
        },
        {
            "name": "Redis.Redis-Conn-New.Client_Certificate",
            "type": "string",
            "value": {
                "content": "",
                "filename": ""
            }
        },
        {
            "name": "Redis.Redis-Conn-New.Client_Key",
            "type": "string",
            "value": {
                "content": "",
                "filename": ""
            }
        },
        {
            "name": "Redis.Redis-Conn-New.CA_or_Server_Certificate",
            "type": "string",
            "value": {
                "content": "",
                "filename": ""
            }
        }
    ],
    "connections": {
        "3717ff40-0bd2-11ec-9848-472c5e74e79e": {
            "id": "3717ff40-0bd2-11ec-9848-472c5e74e79e",
            "name": "Redis-Conn-New",
            "ref": "#connection",
            "isGlobal": false,
            "settings": {
                "Name": "Redis-Conn-New",
                "Description": "",
                "Host": "=$property[\"Redis.Redis-Conn-New.Host_Name\"]",
                "Port": "=$property[\"Redis.Redis-Conn-New.Port\"]",
                "DefaultDatabaseIndex": "=$property[\"Redis.Redis-Conn-New.Default_Database_Index\"]",
                "Password": "=$property[\"Redis.Redis-Conn-New.Password\"]",
                "AuthMode": true,
                "ClientCert": "=$property[\"Redis.Redis-Conn-New.Client_Certificate\"]",
                "ClientKey": "=$property[\"Redis.Redis-Conn-New.Client_Key\"]",
                "CaCert": "=$property[\"Redis.Redis-Conn-New.CA_or_Server_Certificate\"]",
                "DocsMetadata": "{\n            \"command_groups\": [\"Strings\", \"Lists\", \"Sets\", \"SortedSets\", \"Hashes\"],\n            \"commands\": {\n                \"/Strings/APPEND\": {\n                    \"summary\": \"Append a value to a list, only if the list exists\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/GET\": {\n                    \"summary\": \"Get the value of a key\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"value\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/GETSET\": {\n                    \"summary\": \"Get the value of a key\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"value\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/STRLEN\": {\n                    \"summary\": \"Get the length of the value stored in a key\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/GETRANGE\": {\n                    \"summary\": \"Get the value of a key\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"start\": {\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                },\n                                \"end\": {\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"value\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/SETRANGE\": {\n                    \"summary\": \"Set the string value of a key\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"offset\": {\n                                    \"required\": false,\n                                    \"type\": \"integer\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\t\t\t\t\t\t\n                            },\n                            \"required\": [\"key\", \"offset\", \"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/MGET\": {\n                    \"summary\": \"Append a value to a list, only if the list exists\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"keys\": {\n                                    \"required\": true,\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"key\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"keys\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"keyvalues\": {\n                                    \"$id\": \"#/properties/keyvalues\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/keyvalues/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"key\": {\n                                                \"$id\": \"#/properties/keyvalues/items/properties/key\", \n                                                \"type\": \"string\"\n                                            }, \n                                            \"value\": {\n                                                \"$id\": \"#/properties/keyvalues/items/properties/value\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/SET\": {\n                    \"summary\": \"Set the string value of a key\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"EX\": {\n                                    \"required\": false,\n                                    \"type\": \"integer\"\n                                },\n                                \"PX\": {\n                                    \"required\": false,\n                                    \"type\": \"integer\"\n                                },\n                                \"NX|XX\": {\n                                    \"required\": false,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"OK\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Strings/MSET\": {\n                    \"summary\": \"Set multiple keys to multiple values\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"keyvalues\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"key\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            },\n                                            \"value\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"keyvalues\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"OK\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Lists/LPUSH\": {\n                    \"summary\": \"Prepend one or multiple values to a list\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"values\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"value\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\", \"values\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        3\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/Lists/RPUSH\": {\n                    \"summary\": \" Append one or multiple values to a list\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"values\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"value\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\", \"values\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        3\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/Lists/LPOP\": {\n                    \"summary\": \"Remove and get the first element in a list\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"value\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/Lists/RPOP\": {\n                    \"summary\": \"Remove and get the last element in a list\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"value\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Lists/LINDEX\": {\n                    \"summary\": \" Get an element from a list by its index\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"index\": {\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"required\": [\"key\",\"index\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"value\"\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Lists/LSET\": {\n                    \"summary\": \" Set the value of an element in a list by its index\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"index\": {\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\",\"index\",\"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"value\"\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Lists/LREM\": {\n                    \"summary\": \" Remove elements from a list\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"count\": {\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\",\"count\",\"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        2\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Lists/LINSERT\": {\n                    \"summary\": \"Insert an element before or after another element in a list\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"BEFORE|AFTER\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"pivot\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\",\"BEFORE|AFTER\",\"pivot\",\"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        2\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Lists/LRANGE\": {\n                    \"summary\": \"Get a range of elements from a list\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"start\": {\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                },\n                                \"stop\": {\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"required\": [\"key\", \"start\", \"stop\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"values\": {\n                                    \"$id\": \"#/properties/values\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/values/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"value\": {\n                                                \"$id\": \"#/properties/values/items/properties/value\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Sets/SADD\": {\n                    \"summary\": \"Add values to a set apart from the ones that exist\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"members\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"member\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\", \"members\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n        \n                    }\n                    \n                },\n                \"/Sets/SCARD\": {\n                    \"summary\": \"Get the number of members in a set\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        0\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/Sets/SREM\": {\n                    \"summary\": \"Remove one or more members from a set\",\n                    \"schema\":{\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"members\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"member\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\", \"members\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/Sets/SMEMBERS\": {\n                    \"summary\": \"Get all the members in a set\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                }\n                            },\n                            \"required\":[\"key\"]\n                        },\n                        \"output\":{\n                            \"type\":\"object\",\n                            \"properties\": {\n                                \"members\": {\n                                    \"$id\": \"#/properties/members\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/members/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"member\": {\n                                                \"$id\": \"#/properties/members/items/properties/member\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Sets/SPOP\": {\n                    \"summary\":\"Remove and return one or multiple random members from a set\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                },\n                                \"count\":{\n                                    \"required\": false,\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\":{\n                            \"type\":\"object\",\n                            \"properties\": {\n                                \"members\": {\n                                    \"$id\": \"#/properties/members\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/members/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"member\": {\n                                                \"$id\": \"#/properties/members/items/properties/member\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/Sets/SMOVE\":{\n                    \"summary\":\"Move a member from one set to another\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"source\":{\n                                    \"type\": \"string\",\n                                    \"required\":true\n                                },\n                                \"destination\":{\n                                    \"type\": \"string\",\n                                    \"required\":true\n                                },\n                                \"member\": {\n                                    \"type\": \"string\",\n                                    \"required\":true\n                                }\n                            },\n                            \"required\": [\"source\", \"destination\", \"member\"]\n                        },\n                        \"output\":{\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Sets/SISMEMBER\":{\n                    \"summary\": \"Determine if a given value is a member of a set\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\": \"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                },\n                                \"member\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"member\"]\n                        },\n                        \"output\":{\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"boolean\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": false,\n                                    \"examples\": [\n                                        true\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/SortedSets/ZADD\": {\n                    \"summary\": \"Add one or more members to a sorted set, or update its score if it already exists\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"memberswithscores\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"member\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            },\n                                            \"score\": {\n                                                \"required\": true,\n                                                \"type\": \"integer\"\n                                            }\n                                        }\n                                    }\n                                },\n                                \"NX|XX\":{\n                                    \"required\": false,\n                                    \"type\": \"string\"\n                                },\n                                \"CH\":{\n                                    \"required\": false,\n                                    \"type\": \"boolean\"\n                                },\n                                \"INCR\":{\n                                    \"required\": false,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"memberswithscores\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/SortedSets/ZCARD\": {\n                    \"summary\": \"Get the number of members in a sorted set\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/SortedSets/ZREM\": {\n                    \"summary\": \"Remove one or more members from a sorted set\",\n                    \"schema\":{\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"members\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"member\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\", \"members\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/SortedSets/ZRANGE\": {\n                    \"summary\": \"Get all the members in a set\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                },\n                                \"start\":{\n                                    \"required\":true,\n                                    \"type\":\"integer\"\n                                },\n                                \"stop\":{\n                                    \"required\":true,\n                                    \"type\":\"integer\"\n                                },\n                                \"WITHSCORES\": {\n                                    \"required\":false,\n                                    \"type\":\"boolean\"\n                                }\n                            },\n                            \"required\":[\"key\", \"start\", \"stop\"]\n                        },\n                        \"output\":{\n                            \"type\":\"object\",\n                            \"properties\": {\n                                \"members\": {\n                                    \"$id\": \"#/properties/members\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/members/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"member\": {\n                                                \"$id\": \"#/properties/members/items/properties/member\", \n                                                \"type\": \"string\"\n                                            },\n                                            \"score\": {\n                                                \"$id\": \"#/properties/members/items/properties/member\", \n                                                \"type\": \"integer\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/SortedSets/ZCOUNT\": {\n                    \"summary\":\"Count the members in a sorted set with scores within the given values\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                },\n                                \"min\":{\n                                    \"required\": false,\n                                    \"type\": \"string\"\n                                },\n                                \"max\":{\n                                    \"required\": false,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"min\", \"max\"]\n                        },\n                        \"output\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"result\":{\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/SortedSets/ZRANK\": {\n                    \"summary\":\"Determine the index of a member in a sorted set\",\n                    \"schema\":{\n                        \"parameters\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"key\":{\n                                    \"required\":true,\n                                    \"type\":\"string\"\n                                },\n                                \"member\":{\n                                    \"required\": false,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"member\"]\n                        },\n                        \"output\":{\n                            \"type\":\"object\",\n                            \"properties\":{\n                                \"result\":{\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/SortedSets/ZREMRANGEBYRANK\": {\n                    \"summary\": \"Remove all members in a sorted set within the given indexes\",\n                    \"schema\":{\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"start\":{\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                },\n                                \"stop\":{\n                                    \"required\": true,\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"required\": [\"key\", \"start\", \"stop\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/SortedSets/ZREMRANGEBYSCORE\": {\n                    \"summary\": \"Remove all members in a sorted set within the given scores\",\n                    \"schema\":{\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"min\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"max\":{\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\", \"min\", \"max\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": 0,\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                \"/Hashes/HDEL\": {\n                    \"summery\": \"Delete one or more hash fields\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"field\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\",\"fields\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HEXISTS\": {\n                    \"summery\": \"Determine if a hash field exists\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"field\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\",\"field\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"boolean\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": false,\n                                    \"examples\": [\n                                        true\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HGET\": {\n                      \"summary\": \"Get the value of a hash field\",\n                      \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"field\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\",\"field\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"foo\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HGETALL\": {\n                    \"summary\": \"Get all the fields and values in a hash\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"fieldvalues\": {\n                                    \"$id\": \"#/properties/fieldvalues\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/fieldvalues/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"field\": {\n                                                \"$id\": \"#/properties/fieldvalues/items/properties/field\", \n                                                \"type\": \"string\"\n                                            }, \n                                            \"value\": {\n                                                \"$id\": \"#/properties/fieldvalues/items/properties/value\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HKEYS\": {\n                    \"summary\": \"Get all the fields in a hash\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"fields\": {\n                                    \"$id\": \"#/properties/fields\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/fields/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"field\": {\n                                                \"$id\": \"#/properties/fields/items/properties/field\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HLEN\": {\n                    \"summary\": \"Get the number of fields in a hash\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"integer\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HMGET\": {\n                    \"summary\": \"Get the values of all the given hash fields\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"fields\": {\n                                    \"required\": true,\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"field\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\", \"fields\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"$id\": \"#/properties/keyvalues/items/properties/field\", \n                                    \"type\": \"string\"\n                                }, \n                                \"fieldvalues\": {\n                                    \"$id\": \"#/properties/fieldvalues\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/fieldvalues/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"field\": {\n                                                \"$id\": \"#/properties/fieldvalues/items/properties/field\", \n                                                \"type\": \"string\"\n                                            }, \n                                            \"value\": {\n                                                \"$id\": \"#/properties/fieldvalues/items/properties/value\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                  \"/Hashes/HMSET\": {\n                    \"summary\": \"Set multiple hash fields to multiple values\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"fieldvalues\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"field\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            },\n                                            \"value\": {\n                                                \"required\": true,\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"required\": [\"key\", \"fieldvalues\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"string\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": \"\",\n                                    \"examples\": [\n                                        \"ok\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HSET\": {\n                    \"summary\": \"Set the string value of a hash field\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"field\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\",\"field\", \"value\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"result\": {\n                                    \"$id\": \"/properties/result\",\n                                    \"type\": \"boolean\",\n                                    \"title\": \"The Result Schema \",\n                                    \"default\": false,\n                                    \"examples\": [\n                                        true\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"/Hashes/HVALS\": {\n                    \"summary\": \"Get all the values in a hash\",\n                    \"schema\": {\n                        \"parameters\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"key\": {\n                                    \"required\": true,\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\"key\"]\n                        },\n                        \"output\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"values\": {\n                                    \"$id\": \"#/properties/values\", \n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$id\": \"#/properties/values/items\", \n                                        \"type\": \"object\", \n                                        \"properties\": {\n                                            \"value\": {\n                                                \"$id\": \"#/properties/values/items/properties/value\", \n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }"
            }
        }
    },
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1yZWRpcy5naXQvc3JjL2FwcC9SZWRpcyIsInMzbG9jYXRpb24iOiJUaWJjby9SZWRpcyJ9XQ=="
}