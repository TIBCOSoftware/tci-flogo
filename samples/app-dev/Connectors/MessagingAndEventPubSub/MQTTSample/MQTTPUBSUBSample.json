{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/trigger/subscribe",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
        "github.com/project-flogo/contrib/function/string",
        "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection"
    ],
    "name": "MQTTPUBSUBSample",
    "description": "MQTT app with MQTT pub activity and Subscriber trigger",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "tags": [],
    "triggers": [
        {
            "ref": "#subscribe",
            "name": "mqtt-trigger",
            "description": "Subscribe to an MQTT topic",
            "settings": {
                "mqttConnection": "conn://ad48e500-0f74-11ea-b42f-6fddfa1bb9f9"
            },
            "id": "MQTTSubBase64",
            "handlers": [
                {
                    "description": "This flow describes how to send the different type of messages to a topic and subscribes to a topic to receives those messages using MQTT Pub activity and MQTT Subscriber trigger",
                    "settings": {
                        "topic": "/Topic1",
                        "qos": 0,
                        "valueType": "Base64",
                        "showwill": true,
                        "will": "WillMessagetest",
                        "willtopic": "/Willstringtopicname",
                        "willqos": 2,
                        "willretain": true
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:MQTTPUBSUB"
                        },
                        "input": {
                            "topic": "=$.topic",
                            "retained": "=$.retained",
                            "qos": "=$.qos",
                            "duplicate": "=$.duplicate",
                            "messageID": "=$.messageID",
                            "stringValueBase64": "=$.stringValue"
                        }
                    },
                    "schemas": {
                        "output": {
                            "jsonValue": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"OutputJsonSub\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\"OutputJsonSub\":\"MQTT Subscribe JSON type\"}"
                            }
                        }
                    },
                    "name": "MQTTPUBSUB"
                }
            ]
        },
        {
            "ref": "#subscribe",
            "name": "mqtt-trigger",
            "description": "Subscribe to an MQTT topic",
            "settings": {
                "mqttConnection": "conn://ad48e500-0f74-11ea-b42f-6fddfa1bb9f9"
            },
            "id": "MQTTSubJSON",
            "handlers": [
                {
                    "description": "This flow describes how to send the different type of messages to a topic and subscribes to a topic to receives those messages using MQTT Pub activity and MQTT Subscriber trigger",
                    "settings": {
                        "topic": "/Topic2",
                        "qos": 2,
                        "valueType": "JSON",
                        "showwill": false,
                        "will": "",
                        "willtopic": "",
                        "willqos": 0,
                        "willretain": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:MQTTPUBSUB"
                        },
                        "input": {
                            "topic": "=$.topic",
                            "retained": "=$.retained",
                            "qos": "=$.qos",
                            "duplicate": "=$.duplicate",
                            "messageID": "=$.messageID",
                            "stringValueJSON": "=$.jsonValue.OutputJsonSub"
                        }
                    },
                    "schemas": {
                        "output": {
                            "jsonValue": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"OutputJsonSub\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\"OutputJsonSub\":\"MQTT Subscribe JSON type\"}"
                            }
                        }
                    },
                    "name": "MQTTPUBSUB"
                }
            ]
        },
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9999,
                "APISpecUpdate": false,
                "swagger": "",
                "swaggerVersion": "v2",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "This flow describes how to send the different type of messages to a topic and subscribes to a topic to receives those messages using MQTT Pub activity and MQTT Subscriber trigger",
                    "settings": {
                        "Method": "GET",
                        "reqType": "application/json",
                        "Path": "/MQTTPub/{output}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:MQTTPUBSUB"
                        },
                        "input": {
                            "topic": "testRest",
                            "retained": "=boolean.false()",
                            "qos": 1,
                            "duplicate": "=boolean.false()",
                            "messageID": 11
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "MQTTPubString": "=$.MQTTPubString",
                                    "MQTTPubBase64": "=$.MQTTPubBase64",
                                    "MQTTPubJSON": "=$.MQTTPubJSON"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"MQTTPubString\":{\"type\":\"string\"},\"MQTTPubBase64\":{\"type\":\"string\"},\"MQTTPubJSON\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"MQTTPubString\": \"\",\n    \"MQTTPubBase64\": \"\",\n    \"MQTTPubJSON\": \"\"\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"output\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"output\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "MQTTPUBSUB"
                }
            ]
        },
        {
            "ref": "#subscribe",
            "name": "mqtt-trigger",
            "description": "Subscribe to an MQTT topic",
            "settings": {
                "mqttConnection": "conn://ad48e500-0f74-11ea-b42f-6fddfa1bb9f9"
            },
            "id": "MQTTSubString",
            "handlers": [
                {
                    "description": "This flow describes how to send the different type of messages to a topic and subscribes to a topic to receives those messages using MQTT Pub activity and MQTT Subscriber trigger",
                    "settings": {
                        "topic": "/Topic3",
                        "qos": 2,
                        "valueType": "String",
                        "showwill": false,
                        "will": "",
                        "willtopic": "",
                        "willqos": 0,
                        "willretain": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:MQTTPUBSUB"
                        },
                        "input": {
                            "topic": "=$.topic",
                            "retained": "=$.retained",
                            "duplicate": "=$.duplicate",
                            "stringValueString": "=$.stringValue",
                            "messageID": "=$.messageID",
                            "qos": "=$.qos"
                        }
                    },
                    "name": "MQTTPUBSUB"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:MQTTPUBSUB",
            "data": {
                "name": "MQTTPUBSUB",
                "description": "This flow describes how to send the different type of messages to a topic and subscribes to a topic to receives those messages using MQTT Pub activity and MQTT Subscriber trigger",
                "links": [
                    {
                        "id": 1,
                        "from": "MQTTPubBase64",
                        "to": "MQTTPubJSON",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "MQTTPubJSON",
                        "to": "MQTTPubString",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "MQTTPubString",
                        "to": "PubBase64Log",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "PubBase64Log",
                        "to": "PubJSONLog",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "PubJSONLog",
                        "to": "PubStringLog",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "PubStringLog",
                        "to": "SubBase64Log",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "SubBase64Log",
                        "to": "SubJSONLog",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "SubJSONLog",
                        "to": "SubStringLog",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "SubStringLog",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "MQTTPubBase64",
                        "name": "MQTTPubBase64",
                        "description": "An MQTT message publisher",
                        "activity": {
                            "ref": "#publish",
                            "input": {
                                "Connection": "conn://ad48e500-0f74-11ea-b42f-6fddfa1bb9f9",
                                "topic": "/Topic1",
                                "retain": true,
                                "qos": 2,
                                "valueType": "Base64",
                                "stringValue": "eyJRb3MgSW5QdWIiOiIyIiwiUW9zIEluU3ViIjoiMCIsImFnZSI6MTIsIm5hbWUiOiJ0ZXN0QmFzZTY0LUJhc2U2NDIiLCJyZXRhaW4iOiJmYWxzZSJ9"
                            }
                        }
                    },
                    {
                        "id": "MQTTPubJSON",
                        "name": "MQTTPubJSON",
                        "description": "An MQTT message publisher",
                        "activity": {
                            "ref": "#publish",
                            "input": {
                                "Connection": "conn://ad48e500-0f74-11ea-b42f-6fddfa1bb9f9",
                                "topic": "/Topic2",
                                "retain": false,
                                "qos": 1,
                                "valueType": "JSON",
                                "stringValue": "",
                                "jsonValue": {
                                    "mapping": {
                                        "Outputtopic": "MQTT Publish on Topic with type json TestCase31"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "jsonValue": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Outputtopic\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"Outputtopic\":\"MQTT Publish on Topic with type json\"}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "MQTTPubString",
                        "name": "MQTTPubString",
                        "description": "An MQTT message publisher",
                        "activity": {
                            "ref": "#publish",
                            "input": {
                                "Connection": "conn://ad48e500-0f74-11ea-b42f-6fddfa1bb9f9",
                                "topic": "/Topic3",
                                "retain": false,
                                "qos": 0,
                                "valueType": "String",
                                "stringValue": "Test string type message"
                            }
                        }
                    },
                    {
                        "id": "PubBase64Log",
                        "name": "PubBase64Log",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "MQTT message published on Topic1 Logs"
                            }
                        }
                    },
                    {
                        "id": "PubJSONLog",
                        "name": "PubJSONLog",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "Mqtt JSON published on Topic2 Logs"
                            }
                        }
                    },
                    {
                        "id": "PubStringLog",
                        "name": "PubStringLog",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "Mqtt JSON published on Topic3 Logs"
                            }
                        }
                    },
                    {
                        "id": "SubBase64Log",
                        "name": "SubBase64Log",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Trigger First Output\", \" \", \"TopicName:\",$flow.topic, \" \", \"Retained:\", string.tostring($flow.retained), \" \", \"Qos:\", $flow.qos, \" \", \"stringValue:\", $flow.stringValueBase64)"
                            }
                        }
                    },
                    {
                        "id": "SubJSONLog",
                        "name": "SubJSONLog",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Trigger Second Output\", \" \", \"TopicName:\",$flow.topic, \" \", \"Retained:\", string.tostring($flow.retained), \" \", \"Qos:\", $flow.qos, \" \", \"stringValue:\", $flow.stringValueJSON)"
                            }
                        }
                    },
                    {
                        "id": "SubStringLog",
                        "name": "SubStringLog",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Trigger Second Output\", \" \", \"TopicName:\",$flow.topic, \" \", \"Retained:\", string.tostring($flow.retained), \" \", \"Qos:\", $flow.qos, \" \", \"stringValue:\", $flow.stringValueString)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "retained",
                            "type": "boolean"
                        },
                        {
                            "name": "qos",
                            "type": "integer"
                        },
                        {
                            "name": "duplicate",
                            "type": "boolean"
                        },
                        {
                            "name": "messageID",
                            "type": "integer"
                        },
                        {
                            "name": "stringValueBase64",
                            "type": "string"
                        },
                        {
                            "name": "stringValueJSON",
                            "type": "string"
                        },
                        {
                            "name": "stringValueString",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "subLog",
                            "type": "string"
                        },
                        {
                            "name": "sub1Log",
                            "type": "string"
                        },
                        {
                            "name": "MQTTPubBase64",
                            "type": "string"
                        },
                        {
                            "name": "MQTTPubJSON",
                            "type": "string"
                        },
                        {
                            "name": "MQTTPubString",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"MQTTSub\",\"properties\":{\"topic\":{\"type\":\"string\",\"required\":false},\"retained\":{\"type\":\"boolean\",\"required\":false},\"qos\":{\"type\":\"integer\",\"required\":false},\"duplicate\":{\"type\":\"boolean\",\"required\":false},\"messageID\":{\"type\":\"integer\",\"required\":false},\"stringValueBase64\":{\"type\":\"string\",\"required\":false},\"stringValueJSON\":{\"type\":\"string\",\"required\":false},\"stringValueString\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"subLog\":{\"type\":\"string\"},\"sub1Log\":{\"type\":\"string\"},\"MQTTPubBase64\":{\"type\":\"string\"},\"MQTTPubJSON\":{\"type\":\"string\"},\"MQTTPubString\":{\"type\":\"string\"}}}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [
        {
            "name": "topic",
            "type": "string",
            "value": "myhome/string/groundfloor/hall/temperature"
        },
        {
            "name": "qos",
            "type": "float64",
            "value": 2
        },
        {
            "name": "subtopic",
            "type": "string",
            "value": "/TestCase1/#"
        },
        {
            "name": "willQos",
            "type": "float64",
            "value": 2
        },
        {
            "name": "willTopic",
            "type": "string",
            "value": "testwill/test"
        },
        {
            "name": "MaximumlQos",
            "type": "float64",
            "value": 1
        },
        {
            "name": "will",
            "type": "string",
            "value": "test will mwssage"
        },
        {
            "name": "will_Retain",
            "type": "boolean",
            "value": true
        },
        {
            "name": "showWillFields",
            "type": "boolean",
            "value": false
        },
        {
            "name": "Mqtt.MQTT.Broker_URL",
            "type": "string",
            "value": "ssl://test.mosquitto.org:8883"
        },
        {
            "name": "Mqtt.MQTT.Username",
            "type": "string",
            "value": ""
        },
        {
            "name": "Mqtt.MQTT.Password",
            "type": "string",
            "value": "SECRET:BNLLdB0oeX9VW3OQw9uOlA=="
        },
        {
            "name": "Mqtt.MQTT.Encryption_Mode",
            "type": "string",
            "value": "TLS-Cert"
        },
        {
            "name": "Mqtt.MQTT.Cacert",
            "type": "string",
            "value": {
                "filename": "mosquitto.org.crt",
                "content": "data:application/pkix-cert;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lVQlkxaGxDR3ZkajROaEJYa1ovdUxVWk5JTEF3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daQXhDekFKQmdOVkJBWVRBa2RDTVJjd0ZRWURWUVFJREE1VmJtbDBaV1FnUzJsdVoyUnZiVEVPTUF3RwpBMVVFQnd3RlJHVnlZbmt4RWpBUUJnTlZCQW9NQ1UxdmMzRjFhWFIwYnpFTE1Ba0dBMVVFQ3d3Q1EwRXhGakFVCkJnTlZCQU1NRFcxdmMzRjFhWFIwYnk1dmNtY3hIekFkQmdrcWhraUc5dzBCQ1FFV0VISnZaMlZ5UUdGMFkyaHYKYnk1dmNtY3dIaGNOTWpBd05qQTVNVEV3TmpNNVdoY05NekF3TmpBM01URXdOak01V2pDQmtERUxNQWtHQTFVRQpCaE1DUjBJeEZ6QVZCZ05WQkFnTURsVnVhWFJsWkNCTGFXNW5aRzl0TVE0d0RBWURWUVFIREFWRVpYSmllVEVTCk1CQUdBMVVFQ2d3SlRXOXpjWFZwZEhSdk1Rc3dDUVlEVlFRTERBSkRRVEVXTUJRR0ExVUVBd3dOYlc5emNYVnAKZEhSdkxtOXlaekVmTUIwR0NTcUdTSWIzRFFFSkFSWVFjbTluWlhKQVlYUmphRzl2TG05eVp6Q0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNRTBIS21JemZUT3drS0xUM1RISGUrT2JkaXphbVBnClVabUQ2NFRmM3pKZE5lWUdZbjRDRVhieVA2ZnkzdFdjOFMyYm9XNmR6ckg4U2RGZjl1bzMyMEdKQTlCN1UxRlcKVGUzeGRhL0xtM0pGZmFIamtXdzdqQndjYXVRWmpwR0lOSGFwSFJscGlDWnNxdUF0aE9neFc5U2dEZ1lsR3pFQQpzMDZwa0VGaU13K3FEZkxvL3N4RktCNnZRbEZla01lQ3ltakxDYk53UEp5cXloRm1QV3dpby9QRE1ydUJUelBICjNjaW9CbnJKV0tYYzNPalhkTEdGSk9majdwUDBqL2RyMkxINzJlU3Z2M1BRUUZsOTBDWlBGaHJDVWNSSFNTeG8KRTZ5akdPZG56N2Y2UHZlTElCNTc0a1FPUnd0OGVQbjB5aWRyVEMxaWN0aWtFRDNuSFloTVVPVUNBd0VBQWFOVApNRkV3SFFZRFZSME9CQllFRlBWVjZ4QlVGUGlHS0R5bzVWMytIYmg0TjlZU01COEdBMVVkSXdRWU1CYUFGUFZWCjZ4QlVGUGlHS0R5bzVWMytIYmg0TjlZU01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnRUJBR2E5a1MyMU43MFRoTTYvSGo5RDdtYlZ4S0xCalZXZTJUUHNHZmJsM3JFRGZaK09LUloyajZBQwo2cjdqYjRUWk8zZHpGMnA2ZGdicmxVNzFZLzRLMFRkeklqUmozY1EzS1NtNDFKdlVRMGhaL2MwNGlHRGcveFdmCitwcDU4bmZQQVl3dWVycnVQTldtbFN0V0FYZjBVVHFSdGc0aFFEV0J1VUZESlR1V3V1QnZFWHVkejc0ZWgvd0sKc013ZnUxSEZ2ank1WjBpTURVOFBVRGVwalZvbE9DdWU5YXNobFM0RUI1SUVDZFNSMlRJdG5BSWlJd2lteDgzOQpMZFVkUnVkYWZNdTVUNVhtYTE4Mk9DMC91L3hSbEVtK3R2S0dHbWZGY04wcGlxVmw4T3JTUEJnSWxiKzFJS0pFCm0vWHJpV3IvQ3E0aC9KZkI3TlRzZXpWc2xna0Jhb1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        }
    ],
    "connections": {
        "ad48e500-0f74-11ea-b42f-6fddfa1bb9f9": {
            "id": "ad48e500-0f74-11ea-b42f-6fddfa1bb9f9",
            "name": "MQTT",
            "ref": "#connection",
            "isGlobal": false,
            "settings": {
                "name": "MQTT",
                "description": "",
                "broker": "=$property[\"Mqtt.MQTT.Broker_URL\"]",
                "user": "=$property[\"Mqtt.MQTT.Username\"]",
                "password": "=$property[\"Mqtt.MQTT.Password\"]",
                "encryptionMode": "=$property[\"Mqtt.MQTT.Encryption_Mode\"]",
                "cacert": "=$property[\"Mqtt.MQTT.Cacert\"]",
                "clientcert": {
                    "content": "",
                    "filename": ""
                },
                "clientkey": {
                    "content": "",
                    "filename": ""
                }
            }
        }
    },
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1tcXR0LmdpdC9NcXR0IiwiczNsb2NhdGlvbiI6IlRpYmNvL01xdHQifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktY29udHJpYi5naXQvY29udHJpYnV0aW9ucy9HZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwifV0=",
    "fe_metadata": "UEsDBAoAAAAIAIQ7uVKrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACACEO7lSq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}
