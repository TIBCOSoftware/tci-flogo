{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/activity/producer",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/activity/commit",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/trigger/consumer",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/connector/kafka"
    ],
    "name": "KafkaAppSample",
    "description": "",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "tags": [],
    "triggers": [
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9999,
                "APISpecUpdate": false,
                "swagger": "",
                "swaggerVersion": "v2",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Method": "GET",
                        "reqType": "application/json",
                        "Path": "/pub",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:producer"
                        },
                        "input": {
                            "headers": "=$.headers"
                        },
                        "output": {
                            "code": "=$.code",
                            "message": "=$.message"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "producer"
                }
            ]
        },
        {
            "ref": "#consumer",
            "name": "tibco-kafka-consumer-trigger",
            "description": "",
            "settings": {
                "kafkaConnection": "conn://777b8cb0-cd9c-11eb-81c5-e31e6ce7810c"
            },
            "id": "KafkaConsumer",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "sampletopic",
                        "topicPattern": "",
                        "consumerGroup": "sample",
                        "valueType": "String",
                        "subjects": "String",
                        "versions": 1,
                        "commitInterval": 5000,
                        "initialOffset": "Oldest",
                        "fetchMinBytes": 1,
                        "fetchMaxWait": 500,
                        "heartbeatInterval": 3000,
                        "sessionTimeout": 30000
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:consumer"
                        },
                        "input": {
                            "topic": "=$.topic",
                            "stringValue": "=$.stringValue"
                        }
                    },
                    "name": "consumer"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:producer",
            "data": {
                "name": "producer",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "KafkaProducer",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "KafkaProducer",
                        "name": "KafkaProducer",
                        "description": "",
                        "activity": {
                            "ref": "#producer",
                            "input": {
                                "kafkaConnection": "conn://777b8cb0-cd9c-11eb-81c5-e31e6ce7810c",
                                "ackMode": "All",
                                "ackTimeout": 10000,
                                "compressionType": "None",
                                "valueType": "String",
                                "subjects": "String",
                                "versions": 1,
                                "maxRequestSize": 1048576,
                                "maxMessages": 0,
                                "frequency": 1000,
                                "topic": "sampletopic",
                                "partition": 0,
                                "key": "",
                                "stringValue": "abc123"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 200,
                                    "message": "Success"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:consumer",
            "data": {
                "name": "consumer",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "KafkaCommitOffset",
                        "to": "LogMessage",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "KafkaCommitOffset",
                        "name": "KafkaCommitOffset",
                        "description": "",
                        "activity": {
                            "ref": "#commit"
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=$flow.stringValue"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "partition",
                            "type": "integer"
                        },
                        {
                            "name": "offset",
                            "type": "integer"
                        },
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "stringValue",
                            "type": "string"
                        },
                        {
                            "name": "headers",
                            "type": "object"
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"KafkaConsumer\",\"properties\":{\"topic\":{\"type\":\"string\",\"required\":false},\"partition\":{\"type\":\"integer\",\"required\":false},\"offset\":{\"type\":\"integer\",\"required\":false},\"key\":{\"type\":\"string\",\"required\":false},\"stringValue\":{\"type\":\"string\",\"required\":false},\"headers\":{\"type\":\"object\"}}}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [
        {
            "name": "Kafka.Kafkasample.Brokers",
            "type": "string",
            "value": ""
        },
        {
            "name": "Kafka.Kafkasample.Connection_Timeout",
            "type": "float64",
            "value": 30
        },
        {
            "name": "Kafka.Kafkasample.Retry_Backoff",
            "type": "float64",
            "value": 250
        }
    ],
    "connections": {
        "777b8cb0-cd9c-11eb-81c5-e31e6ce7810c": {
            "id": "777b8cb0-cd9c-11eb-81c5-e31e6ce7810c",
            "name": "Kafkasample",
            "ref": "#kafka",
            "isGlobal": false,
            "settings": {
                "name": "Kafkasample",
                "description": "Apache Kafka client configuration",
                "brokers": "",
                "authMode": "None",
                "userName": "",
                "password": "SECRET:3l8AMXoBVpHnbLEeuyhDgA==",
                "securityProtocol": "SASL_SSL",
                "clientCert": "",
                "clientKey": "",
                "caCert": "",
                "connectionTimeout": "=$property[\"Kafka.Kafkasample.Connection_Timeout\"]",
                "retryBackoff": "=$property[\"Kafka.Kafkasample.Retry_Backoff\"]",
                "retryMax": 3,
                "refreshFrequency": 40,
                "useSchmaRegistry": false,
                "url": "",
                "userName_schemaRegistry": "",
                "password_schemaRegistry": "SECRET:eGrfUK/YNGzQj/7d1hdaVA=="
            }
        }
    },
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1wbHVnaW5zLmdpdC9jb250cmlidXRpb25zL2thZmthL3NyYy9hcHAvS2Fma2EiLCJzM2xvY2F0aW9uIjoiVGliY28vS2Fma2EifV0=",
    "fe_metadata": "UEsDBAoAAAAIAEVjz1KrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACABFY89Sq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}
