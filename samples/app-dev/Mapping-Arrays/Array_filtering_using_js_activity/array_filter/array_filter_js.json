{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/project-flogo/contrib/activity/jsexec",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/timer",
        "github.com/project-flogo/contrib/function/coerce",
        "github.com/project-flogo/contrib/function/array"
    ],
    "name": "array_filter_js",
    "description": "filters an array based on the conditions",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "tags": [
        "javaScript"
    ],
    "triggers": [
        {
            "ref": "#timer",
            "name": "tibco-wi-timer",
            "description": "Simple Timer trigger",
            "settings": {},
            "id": "TimerTrigger",
            "handlers": [
                {
                    "description": "filters first array based on the condition- 1. elements that are present in second array, 2. elements that are not present in second array",
                    "settings": {
                        "Repeating": false,
                        "Time Interval": 1,
                        "Interval Unit": "Second"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:array_filter_indexOf"
                        }
                    },
                    "name": "array_filter_indexOf"
                },
                {
                    "description": "filters first array based on the condition- 1. elements that are present in second array, 2. elements that are not present in second array",
                    "settings": {
                        "Repeating": false,
                        "Start Date": "",
                        "Time Interval": 1,
                        "Interval Unit": "Second"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:arrayofObjects_filter_map"
                        },
                        "input": {
                            "array1": {
                                "mapping": [
                                    {
                                        "id": "1",
                                        "value": 4
                                    },
                                    {
                                        "id": "2",
                                        "value": 23
                                    },
                                    {
                                        "id": "3",
                                        "value": 7
                                    },
                                    {
                                        "id": "4",
                                        "value": 6
                                    },
                                    {
                                        "id": "5",
                                        "value": 45
                                    },
                                    {
                                        "id": "6",
                                        "value": 6
                                    },
                                    {
                                        "id": "7",
                                        "value": 4
                                    },
                                    {
                                        "id": "8",
                                        "value": 73
                                    },
                                    {
                                        "id": "9",
                                        "value": 56
                                    },
                                    {
                                        "id": "10",
                                        "value": 4
                                    }
                                ]
                            },
                            "array2": {
                                "mapping": [
                                    {
                                        "id": "1",
                                        "value": 4
                                    },
                                    {
                                        "id": "5",
                                        "value": 45
                                    },
                                    {
                                        "id": "8",
                                        "value": 73
                                    },
                                    {
                                        "id": "5",
                                        "value": 45
                                    }
                                ]
                            }
                        }
                    },
                    "name": "arrayofObjects_filter_map"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:array_filter_indexOf",
            "data": {
                "name": "array_filter_indexOf",
                "description": "filters first array based on the condition- 1. elements that are present in second array, 2. elements that are not present in second array",
                "links": [
                    {
                        "id": 1,
                        "from": "ExecuteJavaScript",
                        "to": "Arr1_Elementes_presentin_Arr2",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Arr1_Elementes_presentin_Arr2",
                        "to": "Arr1_Elementes_NOTpresentin_Arr2",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "ExecuteJavaScript",
                        "name": "ExecuteJavaScript",
                        "description": "Executes JavaScript",
                        "activity": {
                            "ref": "#jsexec",
                            "settings": {
                                "script": "var result,parameters;\n\nvar arr1 = parameters.array1; //[4, 23, 7, 6, 3, 6, 4, 3, 56, 4]\nvar arr2 = parameters.array2; //[4, 56, 23]\n\n\nvar arr3 = arr1.filter(function (e) {\n  return arr2.indexOf(e) === -1;\n});\nvar arr4 = arr1.filter(function (e) {\n  return arr2.indexOf(e) > -1;\n});\nresult.filtered_array3 = arr3;\nresult.filtered_array4 = arr4;"
                            },
                            "input": {
                                "parameters": {
                                    "mapping": {
                                        "array1": [
                                            4,
                                            23,
                                            7,
                                            6,
                                            3,
                                            6,
                                            4,
                                            3,
                                            56,
                                            4
                                        ],
                                        "array2": [
                                            4,
                                            56,
                                            23
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "parameters": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"array1\":{\"type\":\"array\",\"items\":{}},\"array2\":{\"type\":\"array\",\"items\":{}}}}",
                                        "fe_metadata": "{\n    \"array1\" : [],\n    \"array2\":[]\n}"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"filtered_array3\":{\"type\":\"array\",\"items\":{\"type\":\"number\"}},\"filtered_array4\":{\"type\":\"array\",\"items\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "{\n    \"filtered_array3\":[1],\n    \"filtered_array4\":[1]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Arr1_Elementes_presentin_Arr2",
                        "name": "Arr1_Elementes_presentin_Arr2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=coerce.toString($activity[ExecuteJavaScript].result.filtered_array3)"
                            }
                        }
                    },
                    {
                        "id": "Arr1_Elementes_NOTpresentin_Arr2",
                        "name": "Arr1_Elementes_NOTpresentin_Arr2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=coerce.toString($activity[ExecuteJavaScript].result.filtered_array4)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [],
                    "output": [],
                    "fe_metadata": {}
                }
            }
        },
        {
            "id": "flow:arrayofObjects_filter_map",
            "data": {
                "name": "arrayofObjects_filter_map",
                "description": "filters first array based on the condition- 1. elements that are present in second array, 2. elements that are not present in second array",
                "links": [
                    {
                        "id": 1,
                        "from": "ExecuteJavaScript",
                        "to": "Arr1_Elementes_presentin_Arr2",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Arr1_Elementes_presentin_Arr2",
                        "to": "Arr1_Elementes_NOTpresentin_Arr2",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "ExecuteJavaScript",
                        "name": "ExecuteJavaScript",
                        "description": "Executes JavaScript",
                        "activity": {
                            "ref": "#jsexec",
                            "settings": {
                                "script": "var result, parameters;\n\nvar arr1 = parameters.array1;\nvar arr2 = parameters.array2;\nvar arrayofIds = arr2.map(function (e) \n{ return e.id; }); // take all ids in a new array\n\nvar i = 0;\n\n//elements that are present in array2\nvar arrayC = arr1.filter(function (e) {\n  for (i = 0; i < arrayofIds.length; i++) {\n    if (e.id === arrayofIds[i]) {\n      return true;\n    }\n  }\n});\n\n //elements that are not present in array2\nvar arrayD = arr1.filter(function (e) {\n    for (i = 0; i < arrayofIds.length; i++) {\n    if (e.id === arrayofIds[i]) {\n        return false\n    }\n  }  return true;\n});\nresult.filtered_array3 = arrayC;\nresult.filtered_array4 = arrayD;"
                            },
                            "input": {
                                "parameters": {
                                    "mapping": {
                                        "array1": {
                                            "@foreach($flow.array1,array1)": {
                                                "=": "$loop"
                                            }
                                        },
                                        "array2": {
                                            "@foreach($flow.array2,array2)": {
                                                "=": "$loop"
                                            }
                                        }
                                    }
                                }
                            },
                            "output": {
                                "error": false
                            },
                            "schemas": {
                                "input": {
                                    "parameters": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"array1\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"array2\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"array1\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"array2\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        }\n    }\n}"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"filtered_array3\":{\"type\":\"array\",\"items\":{\"type\":\"number\"}},\"filtered_array4\":{\"type\":\"array\",\"items\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "{\n    \"filtered_array3\":[1],\n    \"filtered_array4\":[1]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Arr1_Elementes_presentin_Arr2",
                        "name": "Arr1_Elementes_presentin_Arr2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=coerce.toString($activity[ExecuteJavaScript].result.filtered_array3)"
                            }
                        }
                    },
                    {
                        "id": "Arr1_Elementes_NOTpresentin_Arr2",
                        "name": "Arr1_Elementes_NOTpresentin_Arr2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=coerce.toString($activity[ExecuteJavaScript].result.filtered_array4)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "array1",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}"
                            }
                        },
                        {
                            "name": "array2",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"array1\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}},\"array2\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}}}}"
                    }
                }
            }
        }
    ],
    "properties": [],
    "schemas": {
        "heroes": {
            "type": "json",
            "value": "{\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"heroes\": {\n\t\t\t\"type\": \"array\",\n\t\t\t\"items\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"name\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"category\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}",
            "fe_metadata": "{\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"heroes\": {\n\t\t\t\"type\": \"array\",\n\t\t\t\"items\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"name\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"category\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}"
        },
        "filer_schema": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"array1\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"array2\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"array1\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"array2\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        }\n    }\n}"
        }
    },
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIAM8jtFKrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACADPI7RSq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}