{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/mapper",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "github.com/project-flogo/contrib/function/array",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility",
        "github.com/project-flogo/contrib/function/string"
    ],
    "name": "array.foreach.sample",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.8.1",
    "triggers": [
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9999,
                "APISpecUpdate": false,
                "swagger": "",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "Get cake details of type donut, batter of type regular, topping of type powdered sugar",
                    "settings": {
                        "Method": "POST",
                        "Path": "/arrayfilter",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:FilterCakesNestedArray"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"donut\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"donut\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"donut\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"donut\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}"
                            }
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:FilterCakesNestedArray",
            "data": {
                "name": "FilterCakesNestedArray",
                "description": "Get cake details of type donut, batter of type regular, topping of type powdered sugar",
                "links": [
                    {
                        "id": 1,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": {
                                            "@foreach($flow.body.cakes,cakes,$loop.type==\"donut\")": {
                                                "topping": {
                                                    "@foreach($loop[cakes].topping,topping,$loop.type==\"Powdered Sugar\")": {
                                                        "id": "=$loop.id",
                                                        "type": "=$loop.type"
                                                    }
                                                },
                                                "id": "=$loop.id",
                                                "type": "=$loop.type",
                                                "name": "=$loop.name",
                                                "ppu": "=$loop.ppu",
                                                "batters": {
                                                    "batter": {
                                                        "@foreach($loop[cakes].batters.batter,batter,$loop.type==\"Regular\")": {
                                                            "=": "$loop"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"cakes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"ppu\": {\n            \"type\": \"number\"\n          },\n          \"batters\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"batter\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"type\"\n                  ]\n                }\n              }\n            }\n          },\n          \"topping\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"type\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"cakes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"ppu\": {\n            \"type\": \"number\"\n          },\n          \"batters\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"batter\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"type\"\n                  ]\n                }\n              }\n            }\n          },\n          \"topping\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"type\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"****Filter Cake with topping type as Powdered Sugar*****\",utility.renderJSON($activity[Mapper].output,boolean.false()))"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 200,
                                    "data": {
                                        "mapping": {
                                            "cakes": {
                                                "@foreach($activity[Mapper].output.cakes,cakes)": {
                                                    "=": "$loop"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [],
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIAEiNmFCrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACABIjZhQq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}