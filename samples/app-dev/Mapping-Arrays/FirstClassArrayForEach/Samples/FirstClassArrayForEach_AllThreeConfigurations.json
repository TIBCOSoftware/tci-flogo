{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/project-flogo/contrib/activity/noop",
        "github.com/tibco/wi-contrib/contributions/General/activity/mapper",
        "github.com/tibco/wi-contrib/contributions/General/activity/log",
        "github.com/tibco/wi-contrib/contributions/General/trigger/rest",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/string"
    ],
    "name": "FirstClassArrayForEach_Mitali",
    "description": " ",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "tags": [],
    "triggers": [
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9999,
                "APISpecUpdate": false,
                "swagger": "",
                "swaggerVersion": "v2",
                "apiVersion": "1.0.0",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/arrayjson",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Arrayjson"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "Arrayjson"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/AddItems",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:AddItems"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "AddItems"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/SourceArr",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:SourceArr"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "SourceArr"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/SourceArrLoopIndex",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:SourceArrLoopIndex"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "SourceArrLoopIndex"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/SourceArrLoopIdFilter",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:SourceArrLoopIdFilter"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "SourceArrLoopIdFilter"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/SourceArrLoopIdElements",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:SourceArrLoopIdElements"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "SourceArrLoopIdElements"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:Arrayjson",
            "data": {
                "name": "Arrayjson",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": [
                                            {
                                                "id": "0001",
                                                "type": "donut",
                                                "name": "Cake",
                                                "ppu": 0.55,
                                                "batters": {
                                                    "batter": [
                                                        {
                                                            "id": "1001",
                                                            "type": "Regular"
                                                        },
                                                        {
                                                            "id": "1002",
                                                            "type": "Chocolate"
                                                        },
                                                        {
                                                            "id": "1003",
                                                            "type": "Blueberry"
                                                        },
                                                        {
                                                            "id": "1004",
                                                            "type": "Devil's Food"
                                                        }
                                                    ]
                                                },
                                                "topping": [
                                                    {
                                                        "id": "5001",
                                                        "type": "None"
                                                    },
                                                    {
                                                        "id": "5002",
                                                        "type": "Glazed"
                                                    },
                                                    {
                                                        "id": "5005",
                                                        "type": "Sugar"
                                                    },
                                                    {
                                                        "id": "5007",
                                                        "type": "Powdered Sugar"
                                                    },
                                                    {
                                                        "id": "5006",
                                                        "type": "Chocolate with Sprinkles"
                                                    },
                                                    {
                                                        "id": "5003",
                                                        "type": "Chocolate"
                                                    },
                                                    {
                                                        "id": "5004",
                                                        "type": "Maple"
                                                    }
                                                ]
                                            },
                                            {
                                                "id": "0002",
                                                "type": "Butter Cake",
                                                "name": "Raised",
                                                "ppu": 0.55,
                                                "batters": {
                                                    "batter": [
                                                        {
                                                            "id": "1001",
                                                            "type": "Regular"
                                                        }
                                                    ]
                                                },
                                                "topping": [
                                                    {
                                                        "id": "5001",
                                                        "type": "None"
                                                    },
                                                    {
                                                        "id": "5002",
                                                        "type": "Glazed"
                                                    },
                                                    {
                                                        "id": "5005",
                                                        "type": "Sugar"
                                                    },
                                                    {
                                                        "id": "5003",
                                                        "type": "Chocolate"
                                                    },
                                                    {
                                                        "id": "5004",
                                                        "type": "Maple"
                                                    }
                                                ]
                                            },
                                            {
                                                "id": "0003",
                                                "type": "Biscuit Cake",
                                                "name": "Old Fashioned",
                                                "ppu": 0.55,
                                                "batters": {
                                                    "batter": [
                                                        {
                                                            "id": "1001",
                                                            "type": "Regular"
                                                        },
                                                        {
                                                            "id": "1002",
                                                            "type": "Chocolate"
                                                        }
                                                    ]
                                                },
                                                "topping": [
                                                    {
                                                        "id": "5001",
                                                        "type": "None"
                                                    },
                                                    {
                                                        "id": "5002",
                                                        "type": "Glazed"
                                                    },
                                                    {
                                                        "id": "5003",
                                                        "type": "Chocolate"
                                                    },
                                                    {
                                                        "id": "5004",
                                                        "type": "Maple"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjIyOSwieSI6MTAxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NDcsInkiOjk3fX0=",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:AddItems",
            "data": {
                "name": "AddItems",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "MappertoLogMessage"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": [
                                            {
                                                "id": "xw",
                                                "type": "regular11",
                                                "name": "wsw",
                                                "ppu": 22,
                                                "batters": {
                                                    "batter": [
                                                        {
                                                            "id": "ded",
                                                            "type": "ccd"
                                                        }
                                                    ]
                                                },
                                                "topping": [
                                                    {
                                                        "id": "cdcf",
                                                        "type": "vgg"
                                                    }
                                                ]
                                            },
                                            {
                                                "id": "=$flow.body.cakes[0].id",
                                                "type": "=$flow.body.cakes[0].type",
                                                "name": "=$flow.body.cakes[0].name",
                                                "ppu": "=$flow.body.cakes[0].ppu",
                                                "batters": "=$flow.body.cakes[0].batters",
                                                "topping": {
                                                    "@foreach($flow.body.cakes[0].topping,topping)": {
                                                        "=": "$loop"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output.cakes[0])",
                                "logLevel": ""
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjIyOSwieSI6MTAxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NDcsInkiOjk3fX0=",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:SourceArr",
            "data": {
                "name": "SourceArr",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": {
                                            "@foreach($flow.body.cakes, cakes)": {
                                                "=": "$loop"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjIzOSwieSI6MTIyfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NzgsInkiOjE0Nn19",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:SourceArrLoopIndex",
            "data": {
                "name": "SourceArrLoopIndex",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": {
                                            "@foreach($flow.body.cakes, cakes, $loop.index==1)": {
                                                "=": "$loop"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjI0MCwieSI6MTIxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NzgsInkiOjE0Nn19",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:SourceArrLoopIdFilter",
            "data": {
                "name": "SourceArrLoopIdFilter",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": {
                                            "@foreach($flow.body.cakes, cakes, $loop.id==\"0001\")": {
                                                "=": "$loop"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjI0MCwieSI6MTIxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NzgsInkiOjE0Nn19",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:SourceArrLoopIdElements",
            "data": {
                "name": "SourceArrLoopIdElements",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": {
                                            "@foreach($flow.body.cakes, cakes)": {
                                                "id": "=$loop.id",
                                                "type": "=$loop.type"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjI0MCwieSI6MTIxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NzgsInkiOjE0Nn19",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [],
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS90aWJjby93aS1jb250cmliL2NvbnRyaWJ1dGlvbnMvR2VuZXJhbCIsInMzbG9jYXRpb24iOiJUaWJjby9HZW5lcmFsIn1d"
}