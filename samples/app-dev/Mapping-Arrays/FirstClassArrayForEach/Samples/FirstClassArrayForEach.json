{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/project-flogo/contrib/activity/noop",
        "github.com/tibco/wi-contrib/contributions/General/activity/mapper",
        "github.com/tibco/wi-contrib/contributions/General/activity/log",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/tibco/wi-contrib/contributions/General/trigger/rest",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/string"
    ],
    "name": "FirstClassArrayForEach",
    "description": "All three configurations of First Class Array For Each",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "tags": [],
    "triggers": [
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9999,
                "APISpecUpdate": false,
                "swagger": "",
                "swaggerVersion": "v2",
                "apiVersion": "1.0.0",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "Configure array by adding one or more items based on the schema uisng Cake Schema.",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/AddItems",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ConfigureWithItem"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "ConfigureWithItem"
                },
                {
                    "description": "Configuring array reusing the output from previous activities using Customer Schema.",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/SourceArr",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ConfigureWithSource"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}}",
                                "fe_metadata": "{\n\"Customer\":[\n{\n\"ID\":222,\n\"CustomerName\":\"PQR\",\n\"Contact\":{\n\"PersonName\":{\n\"Prefix\":\"Mr\",\n\"First\":\"Vivek\",\n\"Middle\":\"R\",\n\"Last\":\"Randive\",\n\"Suffix\":\"Dr\"\n},\n\"Phone\":\"123-456-7890\",\n\"email\":\"abc@pqr.com\",\n\"Address\":[\n{\n\"AddressType\":\"Main Office\",\n\"Street1\":\"3303 HillView Avenue\",\n\"Street2\":\"Near VMware\",\n\"Street3\":\"Page Mill Road\",\n\"City\":\"Palo Alto\",\n\"State\":\"California\",\n\"PostalCode\":\"41014\",\n\"Country\":\"USA\",\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n}\n]\n},\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n},\n{\n\"ID\":111,\n\"CustomerName\":\"ABC\",\n\"Contact\":{\n\"PersonName\":{\n\"Prefix\":\"Mr\",\n\"First\":\"Steve\",\n\"Middle\":\"Paul\",\n\"Last\":\"Jobs\",\n\"Suffix\":\"Dr\"\n},\n\"Phone\":\"123-456-7890\",\n\"email\":\"abc@pqr.com\",\n\"Address\":[\n{\n\"AddressType\":\"Main Office\",\n\"Street1\":\"3303 HillView Avenue\",\n\"Street2\":\"Near VMware\",\n\"Street3\":\"Page Mill Road\",\n\"City\":\"Palo Alto\",\n\"State\":\"California\",\n\"PostalCode\":\"41014\",\n\"Country\":\"USA\",\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n}\n]\n},\n\"ModifiedDateTIme\":\"2012-12-12T12:12:12Z\"\n}\n]\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}}",
                                "fe_metadata": "{\n\"Customer\":[\n{\n\"ID\":222,\n\"CustomerName\":\"PQR\",\n\"Contact\":{\n\"PersonName\":{\n\"Prefix\":\"Mr\",\n\"First\":\"Vivek\",\n\"Middle\":\"R\",\n\"Last\":\"Randive\",\n\"Suffix\":\"Dr\"\n},\n\"Phone\":\"123-456-7890\",\n\"email\":\"abc@pqr.com\",\n\"Address\":[\n{\n\"AddressType\":\"Main Office\",\n\"Street1\":\"3303 HillView Avenue\",\n\"Street2\":\"Near VMware\",\n\"Street3\":\"Page Mill Road\",\n\"City\":\"Palo Alto\",\n\"State\":\"California\",\n\"PostalCode\":\"41014\",\n\"Country\":\"USA\",\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n}\n]\n},\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n},\n{\n\"ID\":111,\n\"CustomerName\":\"ABC\",\n\"Contact\":{\n\"PersonName\":{\n\"Prefix\":\"Mr\",\n\"First\":\"Steve\",\n\"Middle\":\"Paul\",\n\"Last\":\"Jobs\",\n\"Suffix\":\"Dr\"\n},\n\"Phone\":\"123-456-7890\",\n\"email\":\"abc@pqr.com\",\n\"Address\":[\n{\n\"AddressType\":\"Main Office\",\n\"Street1\":\"3303 HillView Avenue\",\n\"Street2\":\"Near VMware\",\n\"Street3\":\"Page Mill Road\",\n\"City\":\"Palo Alto\",\n\"State\":\"California\",\n\"PostalCode\":\"41014\",\n\"Country\":\"USA\",\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n}\n]\n},\n\"ModifiedDateTIme\":\"2012-12-12T12:12:12Z\"\n}\n]\n}"
                            }
                        }
                    },
                    "name": "ConfigureWithSource"
                },
                {
                    "description": "Configuring array reusing the output from previous activities  and filtering the array on the basis of index.",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/SourceArrLoopIndex",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:SourceArrLoopIndex"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "SourceArrLoopIndex"
                },
                {
                    "description": "Configuring array reusing the output from previous activities and filtering the array on the basis of emement ID.",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/SourceArrLoopIdFilter",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:SourceArrLoopIdFilter"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                            }
                        }
                    },
                    "name": "SourceArrLoopIdFilter"
                },
                {
                    "description": "Configuring array by using static JSON array as the value with json using Books Schema.",
                    "settings": {
                        "Method": "POST",
                        "reqType": "application/json",
                        "Path": "/arrayjson",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ConfigureWithJson"
                        },
                        "input": {
                            "headers": "=$.headers",
                            "body": "=$.body"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}}",
                                "fe_metadata": "{\n\"Book\": [\n  {\n    \"isbn\": \"1451648537\",\n    \"name\": \"Steve Jobs\",\n    \"description\": \"Biography of Apple Co-Founder Steve Jobs\",\n    \"authorName\": \"Walter Isaacson\",\n    \"releaseDate\": \"2012-10-24\",\n    \"vintage\": \"false\",\n    \"signed\": \"false\",\n    \"price\": \"21.00\"\n  }, \n  {\n    \"isbn\": \"0385537859\",\n    \"name\": \"Inferno\",\n    \"description\": \"Robert Langdon returns in Dan Brown's latest fast paced action thirller\",\n    \"authorName\": \"Dan Brown\",\n    \"releaseDate\": \"2013-05-14\",\n    \"vintage\": \"false\",\n    \"signed\": \"true\",\n    \"price\": \"14.09\"\n  },\n  {\n    \"isbn\": \"0399103421\",\n    \"name\": \"The Godfather\",\n    \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n    \"authorName\": \"Mario Puzo\",\n    \"releaseDate\": \"1969-03-10\",\n    \"vintage\": \"true\",\n    \"signed\": \"true\",\n    \"price\": \"50.00\"\n  },\n  {\n    \"isbn\": \"0399103421\",\n    \"name\": \"Steve Jobs\",\n    \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n    \"authorName\": \"Mario Puzo\",\n    \"releaseDate\": \"1969-03-10\",\n    \"vintage\": \"true\",\n    \"signed\": \"true\",\n    \"price\": \"50.00\"\n  }\n]\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}}",
                                "fe_metadata": "{\n\"Book\": [\n  {\n    \"isbn\": \"1451648537\",\n    \"name\": \"Steve Jobs\",\n    \"description\": \"Biography of Apple Co-Founder Steve Jobs\",\n    \"authorName\": \"Walter Isaacson\",\n    \"releaseDate\": \"2012-10-24\",\n    \"vintage\": \"false\",\n    \"signed\": \"false\",\n    \"price\": \"21.00\"\n  }, \n  {\n    \"isbn\": \"0385537859\",\n    \"name\": \"Inferno\",\n    \"description\": \"Robert Langdon returns in Dan Brown's latest fast paced action thirller\",\n    \"authorName\": \"Dan Brown\",\n    \"releaseDate\": \"2013-05-14\",\n    \"vintage\": \"false\",\n    \"signed\": \"true\",\n    \"price\": \"14.09\"\n  },\n  {\n    \"isbn\": \"0399103421\",\n    \"name\": \"The Godfather\",\n    \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n    \"authorName\": \"Mario Puzo\",\n    \"releaseDate\": \"1969-03-10\",\n    \"vintage\": \"true\",\n    \"signed\": \"true\",\n    \"price\": \"50.00\"\n  },\n  {\n    \"isbn\": \"0399103421\",\n    \"name\": \"Steve Jobs\",\n    \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n    \"authorName\": \"Mario Puzo\",\n    \"releaseDate\": \"1969-03-10\",\n    \"vintage\": \"true\",\n    \"signed\": \"true\",\n    \"price\": \"50.00\"\n  }\n]\n}"
                            }
                        }
                    },
                    "name": "ConfigureWithJson"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:ConfigureWithItem",
            "data": {
                "name": "ConfigureWithItem",
                "description": "Configure array by adding one or more items based on the schema uisng Cake Schema.",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "MappertoLogMessage"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessagetoReturn"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": [
                                            {
                                                "id": "xw",
                                                "type": "regular11",
                                                "name": "wsw",
                                                "ppu": 22,
                                                "batters": {
                                                    "batter": [
                                                        {
                                                            "id": "ded",
                                                            "type": "ccd"
                                                        }
                                                    ]
                                                },
                                                "topping": [
                                                    {
                                                        "id": "cdcf",
                                                        "type": "vgg"
                                                    }
                                                ]
                                            },
                                            {
                                                "id": "=$flow.body.cakes[0].id",
                                                "type": "=$flow.body.cakes[0].type",
                                                "name": "=$flow.body.cakes[0].name",
                                                "ppu": "=$flow.body.cakes[0].ppu",
                                                "batters": "=$flow.body.cakes[0].batters",
                                                "topping": {
                                                    "@foreach($flow.body.cakes[0].topping,topping)": {
                                                        "=": "$loop"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output.cakes[0])",
                                "logLevel": ""
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": "=$activity[Mapper].output",
                                    "code": 200
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjIyOSwieSI6MTAxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NDMsInkiOjEwM30sIlJldHVybiI6eyJ4Ijo2MzUsInkiOjEwN319",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:ConfigureWithSource",
            "data": {
                "name": "ConfigureWithSource",
                "description": "Configuring array reusing the output from previous activities using Customer Schema.",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessagetoReturn"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "Customer": {
                                            "@foreach($flow.body.Customer,Customer)": {
                                                "=": "$loop"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}}",
                                        "fe_metadata": "{\n\"Customer\":[\n{\n\"ID\":222,\n\"CustomerName\":\"PQR\",\n\"Contact\":{\n\"PersonName\":{\n\"Prefix\":\"Mr\",\n\"First\":\"Vivek\",\n\"Middle\":\"R\",\n\"Last\":\"Randive\",\n\"Suffix\":\"Dr\"\n},\n\"Phone\":\"123-456-7890\",\n\"email\":\"abc@pqr.com\",\n\"Address\":[\n{\n\"AddressType\":\"Main Office\",\n\"Street1\":\"3303 HillView Avenue\",\n\"Street2\":\"Near VMware\",\n\"Street3\":\"Page Mill Road\",\n\"City\":\"Palo Alto\",\n\"State\":\"California\",\n\"PostalCode\":\"41014\",\n\"Country\":\"USA\",\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n}\n]\n},\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n},\n{\n\"ID\":111,\n\"CustomerName\":\"ABC\",\n\"Contact\":{\n\"PersonName\":{\n\"Prefix\":\"Mr\",\n\"First\":\"Steve\",\n\"Middle\":\"Paul\",\n\"Last\":\"Jobs\",\n\"Suffix\":\"Dr\"\n},\n\"Phone\":\"123-456-7890\",\n\"email\":\"abc@pqr.com\",\n\"Address\":[\n{\n\"AddressType\":\"Main Office\",\n\"Street1\":\"3303 HillView Avenue\",\n\"Street2\":\"Near VMware\",\n\"Street3\":\"Page Mill Road\",\n\"City\":\"Palo Alto\",\n\"State\":\"California\",\n\"PostalCode\":\"41014\",\n\"Country\":\"USA\",\n\"ModifiedDateTIme\":\"2012-12-13T12:12:12Z\"\n}\n]\n},\n\"ModifiedDateTIme\":\"2012-12-12T12:12:12Z\"\n}\n]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}}",
                                        "fe_metadata": "{\n  \"Customer\": [\n    {\n      \"ID\": 222,\n      \"CustomerName\": \"PQR\",\n      \"Contact\": {\n        \"PersonName\": {\n          \"Prefix\": \"Mr\",\n          \"First\": \"Vivek\",\n          \"Middle\": \"R\",\n          \"Last\": \"Randive\",\n          \"Suffix\": \"Dr\"\n        },\n        \"Phone\": \"123-456-7890\",\n        \"email\": \"abc@pqr.com\",\n        \"Address\": [\n          {\n            \"AddressType\": \"Main Office\",\n            \"Street1\": \"3303 HillView Avenue\",\n            \"Street2\": \"Near VMware\",\n            \"Street3\": \"Page Mill Road\",\n            \"City\": \"Palo Alto\",\n            \"State\": \"California\",\n            \"PostalCode\": \"41014\",\n            \"Country\": \"USA\",\n            \"ModifiedDateTIme\": \"2012-12-13T12:12:12Z\"\n          }\n        ]\n      },\n      \"ModifiedDateTIme\": \"2012-12-13T12:12:12Z\"\n    },\n    {\n      \"ID\": 111,\n      \"CustomerName\": \"ABC\",\n      \"Contact\": {\n        \"PersonName\": {\n          \"Prefix\": \"Mr\",\n          \"First\": \"Steve\",\n          \"Middle\": \"Paul\",\n          \"Last\": \"Jobs\",\n          \"Suffix\": \"Dr\"\n        },\n        \"Phone\": \"123-456-7890\",\n        \"email\": \"abc@pqr.com\",\n        \"Address\": [\n          {\n            \"AddressType\": \"Main Office\",\n            \"Street1\": \"3303 HillView Avenue\",\n            \"Street2\": \"Near VMware\",\n            \"Street3\": \"Page Mill Road\",\n            \"City\": \"Palo Alto\",\n            \"State\": \"California\",\n            \"PostalCode\": \"41014\",\n            \"Country\": \"USA\",\n            \"ModifiedDateTIme\": \"2012-12-13T12:12:12Z\"\n          }\n        ]\n      },\n      \"ModifiedDateTIme\": \"2012-12-12T12:12:12Z\"\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": "=$activity[Mapper].output",
                                    "code": 200
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjIzNywieSI6MTI1fSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NzgsInkiOjE0Nn0sIlJldHVybiI6eyJ4Ijo3MjEsInkiOjE1Mn19",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Customer\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"number\"},\"CustomerName\":{\"type\":\"string\"},\"Contact\":{\"type\":\"object\",\"properties\":{\"PersonName\":{\"type\":\"object\",\"properties\":{\"Prefix\":{\"type\":\"string\"},\"First\":{\"type\":\"string\"},\"Middle\":{\"type\":\"string\"},\"Last\":{\"type\":\"string\"},\"Suffix\":{\"type\":\"string\"}}},\"Phone\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"Address\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"AddressType\":{\"type\":\"string\"},\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"City\":{\"type\":\"string\"},\"State\":{\"type\":\"string\"},\"PostalCode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"},\"ModifiedDateTIme\":{\"type\":\"string\"}}}}}},\"ModifiedDateTIme\":{\"type\":\"string\"}},\"required\":[\"ID\",\"CustomerName\",\"Contact\",\"ModifiedDateTIme\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:SourceArrLoopIndex",
            "data": {
                "name": "SourceArrLoopIndex",
                "description": "Configuring array reusing the output from previous activities  and filtering the array on the basis of index.",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessagetoReturn"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": {
                                            "@foreach($flow.body.cakes,cakes, $loop.index==1)": {
                                                "=": "$loop"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 200,
                                    "data": "=$activity[Mapper].output"
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjI0MCwieSI6MTIxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NzgsInkiOjE0Nn0sIlJldHVybiI6eyJ4Ijo3MDMsInkiOjE1M319",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:SourceArrLoopIdFilter",
            "data": {
                "name": "SourceArrLoopIdFilter",
                "description": "Configuring array reusing the output from previous activities and filtering the array on the basis of emement ID.",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivity to Mapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "Mapper to LogMessage"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessagetoReturn"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "cakes": {
                                            "@foreach($flow.body.cakes,cakes, $loop.id==\"0001\")": {
                                                "=": "$loop"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n   \"cakes\":[\n      {\n         \"id\":\"0001\",\n         \"type\":\"donut\",\n         \"name\":\"Cake\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               },\n               {\n                  \"id\":\"1003\",\n                  \"type\":\"Blueberry\"\n               },\n               {\n                  \"id\":\"1004\",\n                  \"type\":\"Devil's Food\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5007\",\n               \"type\":\"Powdered Sugar\"\n            },\n            {\n               \"id\":\"5006\",\n               \"type\":\"Chocolate with Sprinkles\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0002\",\n         \"type\":\"Butter Cake\",\n         \"name\":\"Raised\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5005\",\n               \"type\":\"Sugar\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      },\n      {\n         \"id\":\"0003\",\n         \"type\":\"Biscuit Cake\",\n         \"name\":\"Old Fashioned\",\n         \"ppu\":0.55,\n         \"batters\":{\n            \"batter\":[\n               {\n                  \"id\":\"1001\",\n                  \"type\":\"Regular\"\n               },\n               {\n                  \"id\":\"1002\",\n                  \"type\":\"Chocolate\"\n               }\n            ]\n         },\n         \"topping\":[\n            {\n               \"id\":\"5001\",\n               \"type\":\"None\"\n            },\n            {\n               \"id\":\"5002\",\n               \"type\":\"Glazed\"\n            },\n            {\n               \"id\":\"5003\",\n               \"type\":\"Chocolate\"\n            },\n            {\n               \"id\":\"5004\",\n               \"type\":\"Maple\"\n            }\n         ]\n      }\n   ]\n}\n"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}",
                                        "fe_metadata": "{\n  \"cakes\": [\n    {\n      \"id\": \"0001\",\n      \"type\": \"donut\",\n      \"name\": \"Cake\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          },\n          {\n            \"id\": \"1003\",\n            \"type\": \"Blueberry\"\n          },\n          {\n            \"id\": \"1004\",\n            \"type\": \"Devil's Food\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5007\",\n          \"type\": \"Powdered Sugar\"\n        },\n        {\n          \"id\": \"5006\",\n          \"type\": \"Chocolate with Sprinkles\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0002\",\n      \"type\": \"Butter Cake\",\n      \"name\": \"Raised\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5005\",\n          \"type\": \"Sugar\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0003\",\n      \"type\": \"Biscuit Cake\",\n      \"name\": \"Old Fashioned\",\n      \"ppu\": 0.55,\n      \"batters\": {\n        \"batter\": [\n          {\n            \"id\": \"1001\",\n            \"type\": \"Regular\"\n          },\n          {\n            \"id\": \"1002\",\n            \"type\": \"Chocolate\"\n          }\n        ]\n      },\n      \"topping\": [\n        {\n          \"id\": \"5001\",\n          \"type\": \"None\"\n        },\n        {\n          \"id\": \"5002\",\n          \"type\": \"Glazed\"\n        },\n        {\n          \"id\": \"5003\",\n          \"type\": \"Chocolate\"\n        },\n        {\n          \"id\": \"5004\",\n          \"type\": \"Maple\"\n        }\n      ]\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 200,
                                    "data": "=$activity[Mapper].output"
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjI0MCwieSI6MTIxfSwiTG9nTWVzc2FnZSI6eyJ4Ijo0NzgsInkiOjE0Nn0sIlJldHVybiI6eyJ4Ijo3NjEsInkiOjEzNn19",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"cakes\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"ppu\":{\"type\":\"number\"},\"batters\":{\"type\":\"object\",\"properties\":{\"batter\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}}},\"topping\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"id\",\"type\"]}}},\"required\":[\"id\",\"type\",\"name\",\"ppu\",\"batters\",\"topping\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:ConfigureWithJson",
            "data": {
                "name": "ConfigureWithJson",
                "description": "Configuring array by using static JSON array as the value with json using Books Schema.",
                "links": [
                    {
                        "id": 1,
                        "from": "StartActivity",
                        "to": "Mapper",
                        "type": "label",
                        "label": "StartActivitytoMapper"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "label",
                        "label": "MappertoLogMessage"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessagetoReturn"
                    }
                ],
                "tasks": [
                    {
                        "id": "StartActivity",
                        "name": "StartActivity",
                        "description": "NoOp Activity",
                        "activity": {
                            "ref": "#noop"
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "Book": [
                                            {
                                                "isbn": "1451648537",
                                                "name": "Steve Jobs",
                                                "description": "Biography of Apple Co-Founder Steve Jobs",
                                                "authorName": "Walter Isaacson",
                                                "releaseDate": "2012-10-24",
                                                "vintage": "false",
                                                "signed": "false",
                                                "price": "21.00"
                                            },
                                            {
                                                "isbn": "0385537859",
                                                "name": "Inferno",
                                                "description": "Robert Langdon returns in Dan Brown's latest fast paced action thirller",
                                                "authorName": "Dan Brown",
                                                "releaseDate": "2013-05-14",
                                                "vintage": "false",
                                                "signed": "true",
                                                "price": "14.09"
                                            },
                                            {
                                                "isbn": "0399103421",
                                                "name": "The Godfather",
                                                "description": "The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.",
                                                "authorName": "Mario Puzo",
                                                "releaseDate": "1969-03-10",
                                                "vintage": "true",
                                                "signed": "true",
                                                "price": "50.00"
                                            },
                                            {
                                                "isbn": "0399103421",
                                                "name": "Steve Jobs",
                                                "description": "The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.",
                                                "authorName": "Mario Puzo",
                                                "releaseDate": "1969-03-10",
                                                "vintage": "true",
                                                "signed": "true",
                                                "price": "50.00"
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}}",
                                        "fe_metadata": "{\n\"Book\": [\n  {\n    \"isbn\": \"1451648537\",\n    \"name\": \"Steve Jobs\",\n    \"description\": \"Biography of Apple Co-Founder Steve Jobs\",\n    \"authorName\": \"Walter Isaacson\",\n    \"releaseDate\": \"2012-10-24\",\n    \"vintage\": \"false\",\n    \"signed\": \"false\",\n    \"price\": \"21.00\"\n  }, \n  {\n    \"isbn\": \"0385537859\",\n    \"name\": \"Inferno\",\n    \"description\": \"Robert Langdon returns in Dan Brown's latest fast paced action thirller\",\n    \"authorName\": \"Dan Brown\",\n    \"releaseDate\": \"2013-05-14\",\n    \"vintage\": \"false\",\n    \"signed\": \"true\",\n    \"price\": \"14.09\"\n  },\n  {\n    \"isbn\": \"0399103421\",\n    \"name\": \"The Godfather\",\n    \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n    \"authorName\": \"Mario Puzo\",\n    \"releaseDate\": \"1969-03-10\",\n    \"vintage\": \"true\",\n    \"signed\": \"true\",\n    \"price\": \"50.00\"\n  },\n  {\n    \"isbn\": \"0399103421\",\n    \"name\": \"Steve Jobs\",\n    \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n    \"authorName\": \"Mario Puzo\",\n    \"releaseDate\": \"1969-03-10\",\n    \"vintage\": \"true\",\n    \"signed\": \"true\",\n    \"price\": \"50.00\"\n  }\n]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}}",
                                        "fe_metadata": "{\n  \"Book\": [\n    {\n      \"isbn\": \"1451648537\",\n      \"name\": \"Steve Jobs\",\n      \"description\": \"Biography of Apple Co-Founder Steve Jobs\",\n      \"authorName\": \"Walter Isaacson\",\n      \"releaseDate\": \"2012-10-24\",\n      \"vintage\": \"false\",\n      \"signed\": \"false\",\n      \"price\": \"21.00\"\n    },\n    {\n      \"isbn\": \"0385537859\",\n      \"name\": \"Inferno\",\n      \"description\": \"Robert Langdon returns in Dan Brown's latest fast paced action thirller\",\n      \"authorName\": \"Dan Brown\",\n      \"releaseDate\": \"2013-05-14\",\n      \"vintage\": \"false\",\n      \"signed\": \"true\",\n      \"price\": \"14.09\"\n    },\n    {\n      \"isbn\": \"0399103421\",\n      \"name\": \"The Godfather\",\n      \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n      \"authorName\": \"Mario Puzo\",\n      \"releaseDate\": \"1969-03-10\",\n      \"vintage\": \"true\",\n      \"signed\": \"true\",\n      \"price\": \"50.00\"\n    },\n    {\n      \"isbn\": \"0399103421\",\n      \"name\": \"Steve Jobs\",\n      \"description\": \"The Godfather is an epic story of a New York's top mafia family, loyalty, and how men of honor live in their own world, and die by their own laws.\",\n      \"authorName\": \"Mario Puzo\",\n      \"releaseDate\": \"1969-03-10\",\n      \"vintage\": \"true\",\n      \"signed\": \"true\",\n      \"price\": \"50.00\"\n    }\n  ]\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output)",
                                "logLevel": ""
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": "=$activity[Mapper].output",
                                    "code": 200
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTWFwcGVyIjp7IngiOjI2OCwieSI6MTAwfSwiTG9nTWVzc2FnZSI6eyJ4Ijo1MzksInkiOjk5fSwiUmV0dXJuIjp7IngiOjc5NiwieSI6MTA0fX0=",
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}"
                            }
                        },
                        {
                            "name": "requestURI",
                            "type": "string"
                        },
                        {
                            "name": "method",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Book\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isbn\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"authorName\":{\"type\":\"string\"},\"releaseDate\":{\"type\":\"string\"},\"vintage\":{\"type\":\"string\"},\"signed\":{\"type\":\"string\"},\"price\":{\"type\":\"string\"}},\"required\":[\"isbn\",\"name\",\"description\",\"authorName\",\"releaseDate\",\"vintage\",\"signed\",\"price\"]}}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [],
    "connections": {},
    "metadata": {
        "endpoints": [
            {
                "protocol": "http",
                "port": "9999",
                "spec": {
                    "name": "FirstClassArrayForEach",
                    "version": "1.0.0"
                },
                "title": "ReceiveHTTPMessage",
                "swagger": {
                    "swagger": "2.0",
                    "info": {
                        "title": "FirstClassArrayForEach",
                        "version": "1.0.0",
                        "description": "Simple REST Trigger"
                    },
                    "paths": {
                        "/AddItems": {
                            "post": {
                                "summary": "ConfigureWithItem",
                                "operationId": "post_AddItems",
                                "parameters": [
                                    {
                                        "name": "body",
                                        "in": "body",
                                        "description": "request body parameter",
                                        "required": true,
                                        "schema": {
                                            "$ref": "#/definitions/schema1"
                                        }
                                    }
                                ],
                                "responses": {
                                    "200": {
                                        "description": "Rest Response",
                                        "schema": {
                                            "$ref": "#/definitions/schema1"
                                        }
                                    }
                                },
                                "description": "Configure array by adding one or more items based on the schema uisng Cake Schema.",
                                "consumes": [
                                    "application/json"
                                ]
                            }
                        },
                        "/SourceArr": {
                            "post": {
                                "summary": "ConfigureWithSource",
                                "operationId": "post_SourceArr",
                                "parameters": [
                                    {
                                        "name": "body",
                                        "in": "body",
                                        "description": "request body parameter",
                                        "required": true,
                                        "schema": {
                                            "$ref": "#/definitions/schema2"
                                        }
                                    }
                                ],
                                "responses": {
                                    "200": {
                                        "description": "Rest Response",
                                        "schema": {
                                            "$ref": "#/definitions/schema2"
                                        }
                                    }
                                },
                                "description": "Configuring array reusing the output from previous activities using Customer Schema.",
                                "consumes": [
                                    "application/json"
                                ]
                            }
                        },
                        "/SourceArrLoopIndex": {
                            "post": {
                                "summary": "SourceArrLoopIndex",
                                "operationId": "post_SourceArrLoopIndex",
                                "parameters": [
                                    {
                                        "name": "body",
                                        "in": "body",
                                        "description": "request body parameter",
                                        "required": true,
                                        "schema": {
                                            "$ref": "#/definitions/schema1"
                                        }
                                    }
                                ],
                                "responses": {
                                    "200": {
                                        "description": "Rest Response",
                                        "schema": {
                                            "$ref": "#/definitions/schema1"
                                        }
                                    }
                                },
                                "description": "Configuring array reusing the output from previous activities  and filtering the array on the basis of index.",
                                "consumes": [
                                    "application/json"
                                ]
                            }
                        },
                        "/SourceArrLoopIdFilter": {
                            "post": {
                                "summary": "SourceArrLoopIdFilter",
                                "operationId": "post_SourceArrLoopIdFilter",
                                "parameters": [
                                    {
                                        "name": "body",
                                        "in": "body",
                                        "description": "request body parameter",
                                        "required": true,
                                        "schema": {
                                            "$ref": "#/definitions/schema1"
                                        }
                                    }
                                ],
                                "responses": {
                                    "200": {
                                        "description": "Rest Response",
                                        "schema": {
                                            "$ref": "#/definitions/schema1"
                                        }
                                    }
                                },
                                "description": "Configuring array reusing the output from previous activities and filtering the array on the basis of emement ID.",
                                "consumes": [
                                    "application/json"
                                ]
                            }
                        },
                        "/arrayjson": {
                            "post": {
                                "summary": "ConfigureWithJson",
                                "operationId": "post_arrayjson",
                                "parameters": [
                                    {
                                        "name": "body",
                                        "in": "body",
                                        "description": "request body parameter",
                                        "required": true,
                                        "schema": {
                                            "$ref": "#/definitions/schema3"
                                        }
                                    }
                                ],
                                "responses": {
                                    "200": {
                                        "description": "Rest Response",
                                        "schema": {
                                            "$ref": "#/definitions/schema3"
                                        }
                                    }
                                },
                                "description": "Configuring array by using static JSON array as the value with json using Books Schema.",
                                "consumes": [
                                    "application/json"
                                ]
                            }
                        }
                    },
                    "definitions": {
                        "schema1": {
                            "type": "object",
                            "properties": {
                                "cakes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "ppu": {
                                                "type": "number"
                                            },
                                            "batters": {
                                                "type": "object",
                                                "properties": {
                                                    "batter": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "id",
                                                                "type"
                                                            ]
                                                        }
                                                    }
                                                }
                                            },
                                            "topping": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "type"
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type",
                                            "name",
                                            "ppu",
                                            "batters",
                                            "topping"
                                        ]
                                    }
                                }
                            }
                        },
                        "schema2": {
                            "type": "object",
                            "properties": {
                                "Customer": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ID": {
                                                "type": "number"
                                            },
                                            "CustomerName": {
                                                "type": "string"
                                            },
                                            "Contact": {
                                                "type": "object",
                                                "properties": {
                                                    "PersonName": {
                                                        "type": "object",
                                                        "properties": {
                                                            "Prefix": {
                                                                "type": "string"
                                                            },
                                                            "First": {
                                                                "type": "string"
                                                            },
                                                            "Middle": {
                                                                "type": "string"
                                                            },
                                                            "Last": {
                                                                "type": "string"
                                                            },
                                                            "Suffix": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "Phone": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "Address": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "AddressType": {
                                                                    "type": "string"
                                                                },
                                                                "Street1": {
                                                                    "type": "string"
                                                                },
                                                                "Street2": {
                                                                    "type": "string"
                                                                },
                                                                "Street3": {
                                                                    "type": "string"
                                                                },
                                                                "City": {
                                                                    "type": "string"
                                                                },
                                                                "State": {
                                                                    "type": "string"
                                                                },
                                                                "PostalCode": {
                                                                    "type": "string"
                                                                },
                                                                "Country": {
                                                                    "type": "string"
                                                                },
                                                                "ModifiedDateTIme": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "ModifiedDateTIme": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ID",
                                            "CustomerName",
                                            "Contact",
                                            "ModifiedDateTIme"
                                        ]
                                    }
                                }
                            }
                        },
                        "schema3": {
                            "type": "object",
                            "properties": {
                                "Book": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "isbn": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "authorName": {
                                                "type": "string"
                                            },
                                            "releaseDate": {
                                                "type": "string"
                                            },
                                            "vintage": {
                                                "type": "string"
                                            },
                                            "signed": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "isbn",
                                            "name",
                                            "description",
                                            "authorName",
                                            "releaseDate",
                                            "vintage",
                                            "signed",
                                            "price"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ],
        "flogoVersion": "2.23.0"
    },
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS90aWJjby93aS1jb250cmliL2NvbnRyaWJ1dGlvbnMvR2VuZXJhbCIsInZlcnNpb24iOiIxLjUuMSIsInRhZyI6IjEuNS4xLWIwNCIsIm5hbWUiOiJHZW5lcmFsIiwiaWQiOiJHZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwiLCJpc1VzZXJFeHRlbnNpb24iOmZhbHNlfV0="
}