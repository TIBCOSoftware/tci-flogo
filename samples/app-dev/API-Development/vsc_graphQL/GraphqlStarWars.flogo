{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/tibco/flogo-general/src/app/General/activity/log",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/graphql/trigger/graphql",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/array",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility"
    ],
    "name": "GraphqlStarWars",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "tags": [],
    "triggers": [
        {
            "ref": "#graphql",
            "name": "tibco-graphql",
            "description": "Hero query to get character details",
            "settings": {
                "port": 7879,
                "path": "/graphql",
                "schemaFile": "spec://120868c1",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": "",
                "graphqlSchema": "enum Episode { NEWHOPE, EMPIRE, JEDI }\n\ninterface Character {\n  id: String!\n  name: String\n  appearsIn: [Episode]\n  friends: [Character]\n}\n\ntype Human implements Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  homePlanet: String\n}\n\ninput CharacterReview {\n  id: String!\n\trating: Int\n\tcomment: String\n}\n\ntype Droid implements Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  primaryFunction: String\n}\n\ntype Review {\n  reviewId: String!\n\trating: Int\n\tcomment: String\n}\n\ntype Query {\n  \"Hero query to get character details\"\n  hero(\"The enum value of episode.\" episode: Episode = NEWHOPE): Character\n  \"Get human details\"\n  human(\"The id of Human.\" id: String! = \"dummy\"): Human\n  \"Get droid details\"\n  droid(\"The id of Droid.\" id: String! = \"sample\"): Droid\n}\n\ntype Mutation {\n  \"Submit a review for character\"\n  createReview(characterReview: CharacterReview): Review\n}\n\nschema {\n  query: Query\n\tmutation: Mutation\n}",
                "introspection": true
            },
            "id": "GraphQLTrigger",
            "handlers": [
                {
                    "description": "Hero query to get character details",
                    "settings": {
                        "operation": "Query",
                        "resolverFor": "hero"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Query_hero"
                        },
                        "input": {
                            "arguments": "=$.arguments"
                        },
                        "output": {
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "error": ""
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Character\":{\"type\":\"any\"}},\"required\":[]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"Character\":{\"type\":\"any\"}},\"required\":[]}"
                            }
                        },
                        "output": {
                            "arguments": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"episode\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"episode\":{\"type\":\"string\"}},\"required\":[]}"
                            },
                            "fields": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}"
                            }
                        }
                    },
                    "name": "Query_hero"
                },
                {
                    "description": "Get human details",
                    "settings": {
                        "operation": "Query",
                        "resolverFor": "human"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Query_human"
                        },
                        "input": {
                            "arguments": "=$.arguments"
                        },
                        "output": {
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "error": ""
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Human\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"homePlanet\":{\"type\":\"string\"}}}},\"required\":[]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"Human\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"homePlanet\":{\"type\":\"string\"}}}},\"required\":[]}"
                            }
                        },
                        "output": {
                            "arguments": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}"
                            },
                            "fields": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}"
                            }
                        }
                    },
                    "name": "Query_human"
                },
                {
                    "description": "Get droid details",
                    "settings": {
                        "operation": "Query",
                        "resolverFor": "droid"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Query_droid"
                        },
                        "input": {
                            "arguments": "=$.arguments"
                        },
                        "output": {
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "error": ""
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Droid\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"primaryFunction\":{\"type\":\"string\"}}}},\"required\":[]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"Droid\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"primaryFunction\":{\"type\":\"string\"}}}},\"required\":[]}"
                            }
                        },
                        "output": {
                            "arguments": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}"
                            },
                            "fields": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}"
                            }
                        }
                    },
                    "name": "Query_droid"
                },
                {
                    "description": "Submit a review for character",
                    "settings": {
                        "operation": "Mutation",
                        "resolverFor": "createReview"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Mutation_createReview"
                        },
                        "input": {
                            "arguments": "=$.arguments"
                        },
                        "output": {
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "error": ""
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Review\":{\"type\":\"object\",\"required\":[\"reviewId\"],\"properties\":{\"reviewId\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}},\"required\":[]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"Review\":{\"type\":\"object\",\"required\":[\"reviewId\"],\"properties\":{\"reviewId\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}},\"required\":[]}"
                            }
                        },
                        "output": {
                            "arguments": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"characterReview\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}},\"required\":[]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"characterReview\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}},\"required\":[]}"
                            },
                            "fields": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"fieldName\":{\"type\":\"string\"},\"fields\":{\"type\":\"array\"}}}"
                            }
                        }
                    },
                    "name": "Mutation_createReview"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:Query_hero",
            "data": {
                "name": "Query_hero",
                "description": "Hero query to get character details",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessage to Return"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Executing flow Query_hero with argument: \", $flow.arguments.episode)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "Character": {
                                                "id": "h123",
                                                "name": "Luke",
                                                "friends": [
                                                    {
                                                        "id": "d123",
                                                        "name": "r2-d2",
                                                        "friends": [
                                                            {
                                                                "id": "d234",
                                                                "name": "evee",
                                                                "appearsIn": [
                                                                    "JEDI"
                                                                ],
                                                                "friends": [],
                                                                "primaryFunction": "vehicle"
                                                            }
                                                        ],
                                                        "appearsIn": [
                                                            "JEDI"
                                                        ],
                                                        "primaryFunction": "robot"
                                                    },
                                                    {
                                                        "id": "h234",
                                                        "name": "Robert",
                                                        "friends": [],
                                                        "appearsIn": [
                                                            "JEDI",
                                                            "NEWHOPE"
                                                        ],
                                                        "homePlanet": "Mars"
                                                    }
                                                ],
                                                "appearsIn": [
                                                    "EMPIRE",
                                                    "JEDI"
                                                ],
                                                "homePlanet": "Earth"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJMb2dNZXNzYWdlIjp7IngiOjUwLCJ5Ijo1MH0sIlJldHVybiI6eyJ4IjoyNTAsInkiOjUwfX0=",
                "metadata": {
                    "input": [
                        {
                            "name": "arguments",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"episode\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Character\":{\"type\":\"any\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"GraphQLTrigger\",\"properties\":{\"arguments\":{\"type\":\"object\",\"properties\":{\"episode\":{\"type\":\"string\"}},\"required\":[]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"Character\":{\"type\":\"any\"}},\"required\":[]}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:Query_human",
            "data": {
                "name": "Query_human",
                "description": "Get human details",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessage to Return"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Executing flow Query_human with argument: \", $flow.arguments.id)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "Human": {
                                                "id": "h123",
                                                "name": "Luke",
                                                "friends": [
                                                    {
                                                        "id": "d123",
                                                        "name": "r2-d2",
                                                        "friends": [],
                                                        "appearsIn": [
                                                            "JEDI"
                                                        ],
                                                        "primaryFunction": "robot"
                                                    },
                                                    {
                                                        "id": "h234",
                                                        "name": "Robert",
                                                        "friends": [],
                                                        "appearsIn": [
                                                            "JEDI",
                                                            "NEWHOPE"
                                                        ],
                                                        "homePlanet": "Mars"
                                                    }
                                                ],
                                                "appearsIn": [
                                                    "EMPIRE",
                                                    "JEDI"
                                                ],
                                                "homePlanet": "Earth"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJMb2dNZXNzYWdlIjp7IngiOjUwLCJ5Ijo1MH0sIlJldHVybiI6eyJ4IjoyNTAsInkiOjUwfX0=",
                "metadata": {
                    "input": [
                        {
                            "name": "arguments",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Human\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"homePlanet\":{\"type\":\"string\"}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"GraphQLTrigger\",\"properties\":{\"arguments\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"Human\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"homePlanet\":{\"type\":\"string\"}}}},\"required\":[]}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:Query_droid",
            "data": {
                "name": "Query_droid",
                "description": "Get droid details",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessage to Return"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Executing flow Query_droid with argument: \", $flow.arguments.id)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "Droid": {
                                                "id": "d123",
                                                "name": "mydroid",
                                                "appearsIn": [
                                                    "EMPIRE",
                                                    "JEDI"
                                                ],
                                                "primaryFunction": "Vehicle"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJMb2dNZXNzYWdlIjp7IngiOjUwLCJ5Ijo1MH0sIlJldHVybiI6eyJ4IjoyNTAsInkiOjUwfX0=",
                "metadata": {
                    "input": [
                        {
                            "name": "arguments",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Droid\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"primaryFunction\":{\"type\":\"string\"}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"GraphQLTrigger\",\"properties\":{\"arguments\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"Droid\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"friends\":{\"type\":\"array\",\"items\":{\"type\":\"any\"}},\"appearsIn\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"primaryFunction\":{\"type\":\"string\"}}}},\"required\":[]}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:Mutation_createReview",
            "data": {
                "name": "Mutation_createReview",
                "description": "Submit a review for character",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Return",
                        "type": "label",
                        "label": "LogMessage to Return"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Executing flow Mutation_createReview with argument: \", utility.renderJSON($flow.arguments.characterReview, boolean.true()))"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "Review": {
                                                "reviewId": "m123",
                                                "rating": 5,
                                                "comment": "Mutation operation aut review comment."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "fe_metadata": "eyJMb2dNZXNzYWdlIjp7IngiOjUwLCJ5Ijo1MH0sIlJldHVybiI6eyJ4IjoyNTAsInkiOjUwfX0=",
                "metadata": {
                    "input": [
                        {
                            "name": "arguments",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"characterReview\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Review\":{\"type\":\"object\",\"required\":[\"reviewId\"],\"properties\":{\"reviewId\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"GraphQLTrigger\",\"properties\":{\"arguments\":{\"type\":\"object\",\"properties\":{\"characterReview\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}},\"required\":[]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"Review\":{\"type\":\"object\",\"required\":[\"reviewId\"],\"properties\":{\"reviewId\":{\"type\":\"string\"},\"rating\":{\"type\":\"number\"},\"comment\":{\"type\":\"string\"}}}},\"required\":[]}},\"required\":[]}"
                    }
                }
            }
        }
    ],
    "properties": [],
    "specs": {
        "120868c1": {
            "id": "120868c1",
            "name": "StarWarsSchema",
            "type": "GraphQL",
            "content": "ZW51bSBFcGlzb2RlIHsgTkVXSE9QRSwgRU1QSVJFLCBKRURJIH0KCmludGVyZmFjZSBDaGFyYWN0ZXIgewogIGlkOiBTdHJpbmchCiAgbmFtZTogU3RyaW5nCiAgYXBwZWFyc0luOiBbRXBpc29kZV0KICBmcmllbmRzOiBbQ2hhcmFjdGVyXQp9Cgp0eXBlIEh1bWFuIGltcGxlbWVudHMgQ2hhcmFjdGVyIHsKICBpZDogU3RyaW5nIQogIG5hbWU6IFN0cmluZwogIGZyaWVuZHM6IFtDaGFyYWN0ZXJdCiAgYXBwZWFyc0luOiBbRXBpc29kZV0KICBob21lUGxhbmV0OiBTdHJpbmcKfQoKaW5wdXQgQ2hhcmFjdGVyUmV2aWV3IHsKICBpZDogU3RyaW5nIQoJcmF0aW5nOiBJbnQKCWNvbW1lbnQ6IFN0cmluZwp9Cgp0eXBlIERyb2lkIGltcGxlbWVudHMgQ2hhcmFjdGVyIHsKICBpZDogU3RyaW5nIQogIG5hbWU6IFN0cmluZwogIGZyaWVuZHM6IFtDaGFyYWN0ZXJdCiAgYXBwZWFyc0luOiBbRXBpc29kZV0KICBwcmltYXJ5RnVuY3Rpb246IFN0cmluZwp9Cgp0eXBlIFJldmlldyB7CiAgcmV2aWV3SWQ6IFN0cmluZyEKCXJhdGluZzogSW50Cgljb21tZW50OiBTdHJpbmcKfQoKdHlwZSBRdWVyeSB7CiAgIkhlcm8gcXVlcnkgdG8gZ2V0IGNoYXJhY3RlciBkZXRhaWxzIgogIGhlcm8oIlRoZSBlbnVtIHZhbHVlIG9mIGVwaXNvZGUuIiBlcGlzb2RlOiBFcGlzb2RlID0gTkVXSE9QRSk6IENoYXJhY3RlcgogICJHZXQgaHVtYW4gZGV0YWlscyIKICBodW1hbigiVGhlIGlkIG9mIEh1bWFuLiIgaWQ6IFN0cmluZyEgPSAiZHVtbXkiKTogSHVtYW4KICAiR2V0IGRyb2lkIGRldGFpbHMiCiAgZHJvaWQoIlRoZSBpZCBvZiBEcm9pZC4iIGlkOiBTdHJpbmchID0gInNhbXBsZSIpOiBEcm9pZAp9Cgp0eXBlIE11dGF0aW9uIHsKICAiU3VibWl0IGEgcmV2aWV3IGZvciBjaGFyYWN0ZXIiCiAgY3JlYXRlUmV2aWV3KGNoYXJhY3RlclJldmlldzogQ2hhcmFjdGVyUmV2aWV3KTogUmV2aWV3Cn0KCnNjaGVtYSB7CiAgcXVlcnk6IFF1ZXJ5CgltdXRhdGlvbjogTXV0YXRpb24KfQ=="
        }
    },
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS90aWJjby9mbG9nby1nZW5lcmFsL3NyYy9hcHAvR2VuZXJhbCIsImlkIjoiR2VuZXJhbCIsInZlcnNpb24iOiIxLjYuNCIsInRhZyI6IjEuNi40LWIwMSIsIm5hbWUiOiJHZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwiLCJpc1VzZXJFeHRlbnNpb24iOmZhbHNlfV0=",
    "metadata": {
        "endpoints": [
            {
                "title": "GraphQLTrigger",
                "pingable": false,
                "protocol": "http",
                "port": "7879",
                "specType": "graphql",
                "spec": {
                    "name": "GraphqlStarWars",
                    "version": "1.1.0"
                }
            }
        ],
        "flogoVersion": "2.25.3"
    }
}