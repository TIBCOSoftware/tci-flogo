/**
 * @description 
 * @author Marks-MacBook-Pro-8.local
 */
rule Rules.OrderRule {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		
		Events.OrderEvent orderEvent;

	}
	when {

	}
	then {
		
		// This rule is fired when an OrderEvent is received
		// 
		// The purpose of the rule is to calculate the Order Amount and fire a Payment Event
		// The Payment Event is sent to its default destination (/Channels/Payment/ExecutePayment) and is outbound via TCM
		
		System.debugOut(">>>> OrderRule.rule - Order Rule fired");

		// Create a transient concept so that we can pass object to CalculateOrderAmount Rule Function		
		Concepts.Order order = Instance.createTransientInstanceFromEvent("/Concepts/Order", orderEvent);
	
		// Call Rule Function 'CalculateOrderAmount' to calculaste the total order amount	
		String orderAmount = String.valueOfDouble(RuleFunctions.CalculateOrderAmount(order));
		
		// Glob some debug information about the received Order	
		System.debugOut("#### OrderRule.rule - Order processed: " + order.order_id + " Customer:" + order.customer_id);
		for (int i=0; i<order.items@length; i++) {
			Concepts.OrderItem item = order.items[i];
			System.debugOut("#### OrderRule.rule - " + item.item_name + " - £" + item.price + " (X " + item.quantity + ")");
		}
	
		System.debugOut("#### OrderRule.rule - Order Value £" + orderAmount);	

		// Create Order Concept in Working Memory as we need to reference the Order concept in future rules that get fired
		Instance.createInstance("xslt://{{/Concepts/Order}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"2.0\"><xsl:param name=\"order\"/><xsl:template name=\"Function\" match=\"/\"><createObject><object><xsl:if test=\"$order/order_id\"><xsl:attribute name=\"extId\"><xsl:value-of select=\"$order/order_id\"/></xsl:attribute></xsl:if><xsl:if test=\"$order/order_id\"><order_id><xsl:value-of select=\"$order/order_id\"/></order_id></xsl:if><xsl:if test=\"$order/customer_id\"><customer_id><xsl:value-of select=\"$order/customer_id\"/></customer_id></xsl:if><xsl:if test=\"$order/email\"><email><xsl:value-of select=\"$order/email\"/></email></xsl:if><xsl:copy-of select=\"$order/items\"/><address><xsl:if test=\"$order/address/address1\"><address1><xsl:value-of select=\"$order/address/address1\"/></address1></xsl:if><xsl:if test=\"$order/address/address2\"><address2><xsl:value-of select=\"$order/address/address2\"/></address2></xsl:if><xsl:if test=\"$order/address/city\"><city><xsl:value-of select=\"$order/address/city\"/></city></xsl:if><xsl:if test=\"$order/address/country\"><country><xsl:value-of select=\"$order/address/country\"/></country></xsl:if><xsl:if test=\"$order/address/postcode\"><postcode><xsl:value-of select=\"$order/address/postcode\"/></postcode></xsl:if></address></object></createObject></xsl:template></xsl:stylesheet>");
			
    	// Create Payment Event	and send to default destination (/Channels/Payment/ExecutePayment)  
    	Event paymentEvent = Event.createEvent("xslt://{{/Events/PaymentEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:tns=\"www.tibco.com/be/ontology/Events/PaymentEvent\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\"><xsl:param name=\"order\"/><xsl:param name=\"orderAmount\"/><xsl:template name=\"Function\" match=\"/\"><createEvent><event><xsl:if test=\"$order/order_id\"><xsl:attribute name=\"extId\"><xsl:value-of select=\"$order/order_id\"/></xsl:attribute></xsl:if><payload><tns:payload><order_id><xsl:choose><xsl:when test=\"exists($order/order_id)\"><xsl:value-of select=\"$order/order_id\"/></xsl:when><xsl:otherwise><xsl:attribute name=\"xsi:nil\">true</xsl:attribute></xsl:otherwise></xsl:choose></order_id><customer_id><xsl:choose><xsl:when test=\"exists($order/customer_id)\"><xsl:value-of select=\"$order/customer_id\"/></xsl:when><xsl:otherwise><xsl:attribute name=\"xsi:nil\">true</xsl:attribute></xsl:otherwise></xsl:choose></customer_id><email><xsl:choose><xsl:when test=\"exists($order/email)\"><xsl:value-of select=\"$order/email\"/></xsl:when><xsl:otherwise><xsl:attribute name=\"xsi:nil\">true</xsl:attribute></xsl:otherwise></xsl:choose></email><amount><xsl:value-of select=\"$orderAmount\"/></amount></tns:payload></payload></event></createEvent></xsl:template></xsl:stylesheet>");
    	Event.sendEvent(paymentEvent);
    
    	// Consume Order Event
    	Event.consumeEvent(orderEvent);
	}
	
}